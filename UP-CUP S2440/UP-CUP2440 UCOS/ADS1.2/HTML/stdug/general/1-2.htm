<HTML><HEAD><TITLE>1.2 Product Overview</TITLE></HEAD>
<BODY BGCOLOR=#FFFFFF>
<A HREF="../index.htm"><IMG SRC="images/banner.gif" WIDTH=405 HEIGHT=57 ALT="Rogue Wave banner" BORDER=0></A><BR>
<A HREF="1-1.htm"><IMG SRC="images/prev.gif" WIDTH=20 HEIGHT=21 ALT="Previous file" BORDER=0></A><A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of Document" BORDER=O></A><A HREF="booktoc.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=0></A><A HREF="tindex.htm"><IMG SRC="images/index.gif" WIDTH=56 HEIGHT=21 ALT="Index" BORDER=0></A><A HREF="1-3.htm"><IMG SRC="images/next.gif" WIDTH=19 HEIGHT=21 ALT="Next file" BORDER=0></A>
<H2>1.2 Product Overview</H2>

<A NAME="121"><H3>1.2.1 Components</H3></A>
<A NAME="idx2"><!></A>
<P>The Standard C++ Library is a large and comprehensive collection of classes and functions for fine-grained, low-level programming. Within this library, you will find the following components:</P>
<UL>
<A NAME="idx3"><!></A>
<LI><P>The large set of data structures and algorithms formerly known as the Standard Template Library (STL)</P>
</LI>
<LI><P>An iostream facility</P>
</LI>
<LI><P>A locale facility</P>
</LI>
<LI><P>A templatized <B><I><A HREF="../../stdref/str_8586.htm">string</A></I></B> class</P>
</LI>
<LI><P>A templatized <B><I><A HREF="../../stdref/com_8038.htm">complex</A></I></B> class for representing complex numbers</P>
</LI>
<LI><P>A <B><I><A HREF="../../stdref/val_6244.htm">valarray</A></I></B> class optimized for handling numeric arrays</P>
</LI>
<LI><P>A uniform framework for describing the execution environment, using a template class named <B><I><A HREF="../../stdref/num_5679.htm">numeric_limits</A></I></B> and specializations for each fundamental datatype</P>
</LI>
<LI><P>Memory management features</P>
</LI>
<LI><P>Extensive support for national character sets</P>
</LI>
<LI><P>Exception handling features</P>
</LI>
</UL>

<A NAME="122"><H3>1.2.2 Unique Features</H3></A>
<P>The STL portion of the Standard C++ Library is not object-oriented. If you are accustomed to the benefits of object-oriented programming, their absence may necessitate some adjustment. Encapsulation of data and functionality in objects is a hallmark of object-oriented programming. In the Standard C++ Library, however, the data structures are separate from the algorithms you use to manipulate them. </P>
<P>This feature can provide a number of advantages, such as smaller source code, and the flexibility of using algorithms with C++ pointers and arrays as well as conventional objects. It can also lead to more efficient coding and faster execution, since it creates a direct, nuts-and-bolts approach to solving problems.</P>
<P>The main disadvantage of using the Standard C++ Library directly is increased risk of error. For example, the library's iterators must not be mismatched or invalidated, and iterators in multithreaded environments should be wrapped before being shared among threads. The templates can cause less precise diagnostics, and code that grows unexpectedly large. Experience with the library and your own compiler will help diminish these problems.</P>

<A NAME="123"><H3>1.2.3 Relationship to Tools.h++</H3></A>
<A NAME="idx4"><!></A>
<P>This Rogue Wave implementation of the Standard C++ Library is certified for use with <B>Tools.h++</B>. The Rogue Wave product <B>Tools.h++</B>, version 7.0 and later, encapsulates the Standard C++ Library with an object-oriented interface. Used together, <B>Tools.h++</B> and the <B>Standard C++ Library</B> are designed to provide the benefits of both low-level generic programming and object-orientation. </P>
<P><B>Tools.h++</B> also contains features not included in the standard, like time, date, and regular expression classes, enhanced strings, object persistence, and virtual streams. The new product <B>Tools.h++ Professional</B> extends the functionality of the original <B>Tools.h++</B> with modules on Java interoperability, networks, and CORBA. For many programming tasks, you may find it easier and more convenient to use <B>Tools.h++</B> and <B>Tools.h++ Professional</B> without accessing the Standard C++ Library directly. </P>

<A NAME="124"><H3>1.2.4 Compatibility Issues</H3></A>
<P>This implementation of the Standard C++ Library is largely compatible with previous 2.x implementations, and largely incompatible with 1.x versions.</P>
<P>Please note that some compiler and library vendors have not yet implemented the whole range of language features defined by the ANSI/ISO standard. In the <I>User's Guide</I> and <I>Locales and Iostreams</I>, we draw your attention to places in the code where this might be a problem. If your vendor is still in the process of meeting the standard, some of the techniques demonstrated in this <I>User's Guide</I> may not work. We include them anyway to demonstrate the full range of capabilities of the Standard C++ language. Compilers will catch up, and this guide will be more useful to you if it is as complete as possible.</P>

<HR>
<A HREF="1-1.htm"><IMG SRC="images/prev.gif" WIDTH=20 HEIGHT=21 ALT="Previous file" BORDER=0></A><A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of Document" BORDER=O></A><A HREF="booktoc.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=0></A><A HREF="tindex.htm"><IMG SRC="images/index.gif" WIDTH=56 HEIGHT=21 ALT="Index" BORDER=0></A><A HREF="1-3.htm"><IMG SRC="images/next.gif" WIDTH=19 HEIGHT=21 ALT="Next file" BORDER=0></A><P>OEM Edition, &copy;Copyright 1999, Rogue Wave Software, Inc.<BR><A HREF="contact.htm">Contact</A> Rogue Wave about documentation or support issues.</P>
</BODY></HTML>
