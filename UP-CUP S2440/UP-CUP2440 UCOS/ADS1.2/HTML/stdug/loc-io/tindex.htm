<HTML><TITLE>Topic Index</TITLE><BODY BGCOLOR=#FFFFFF>
<A HREF="../index.htm"><IMG SRC="images/banner.gif" WIDTH=405 HEIGHT=57 ALT="Rogue Wave banner" BORDER=0></A><BR>
<A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of Document" BORDER=O></A><A HREF="booktoc.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=O></A><H2>Topic Index</H2>
<P>Click on one of the letters below to jump immediately to that section of the index. If you get no response, that letter has no entries.</P>
<PRE><a href="#a">A</a>  <a href="#b">B</a>  <a href="#c">C</a>  <a href="#d">D</a>  <a href="#e">E</a>  <a href="#f">F</a>  <a href="#g">G</a>  <a href="#h">H</a>  <a href="#i">I</a>  <a href="#j">J</a>  <a href="#k">K</a>  <a href="#l">L</a>  <a href="#m">M</a>  <a href="#n">N</a>  <a href="#o">O</a>  <a href="#p">P</a><br><br><a href="#q">Q</a>  <a href="#r">R</a>  <a href="#s">S</a>  <a href="#t">T</a>  <a href="#u">U</a>  <a href="#v">V</a>  <a href="#w">W</a>  <a href="#x">X</a>  <a href="#y">Y</a>  <a href="#z">Z</a>
</PRE>
<A NAME="a"><H3>a</H3></A>
<DL>
<BR>algorithms
<UL>defined [in <A HREF="1-4.htm#idx7">1.4.2 Conventions</A>]</UL>
<BR>app [in <A HREF="9-3.htm#idx280">9.3.1.2 The Open modes ate, app, and trunc</A>]
<BR>at-end [in <A HREF="9-3.htm#idx281">9.3.1.2 The Open modes ate, app, and trunc</A>]
<BR>ate [in <A HREF="9-3.htm#idx280">9.3.1.2 The Open modes ate, app, and trunc</A>]
<BR>attach(), eliminated [in <A HREF="24-3.htm#idx503">24.3.1  Connecting Files and Streams</A>]
<BR>automatic file conversion [in <A HREF="9-4.htm#idx289">9.4 Binary and Text Mode</A>]
</DL>
<A NAME="b"><H3>b</H3></A>
<DL><BR>badbit exception, recommended [in <A HREF="8-3.htm#idx262">8.3 Catching Exceptions</A>]
<BR>base and derived facets example [in <A HREF="4-1.htm#idx94">4.1 Understanding Facet Types</A>]
<BR>base facet class, how to define [in <A HREF="4-6.htm#idx115">4.6 Creating a New Base Facet Class</A>]
<BR>base facet types example [in <A HREF="4-1.htm#idx96">4.1 Understanding Facet Types</A>]
<BR>base facet, defined [in <A HREF="4-1.htm#idx93">4.1 Understanding Facet Types</A>]
<BR>basic_filebuf
<UL>[in <A HREF="18-1.htm#idx438">18.1.1 The streambuf Hierarchy</A>]</UL>
<UL>[in <A HREF="6-4.htm#idx211">6.4.2.2 The File Buffer</A>]</UL>
<BR>basic_fstream &lt;charT,traits&gt; [in <A HREF="9-1.htm#idx264">9.1 About File Streams</A>]
<BR>basic_fstream [in <A HREF="6-4.htm#idx195">6.4.1.5 The File Streams</A>]
<BR>basic_ifstream &lt;charT,traits&gt; [in <A HREF="9-1.htm#idx264">9.1 About File Streams</A>]
<BR>basic_ifstream [in <A HREF="6-4.htm#idx195">6.4.1.5 The File Streams</A>]
<BR>basic_iostream [in <A HREF="6-4.htm#idx190">6.4.1.4 The Input and Output Streams</A>]
<BR>basic_istream [in <A HREF="6-4.htm#idx190">6.4.1.4 The Input and Output Streams</A>]
<BR>basic_istringstream
<UL>[in <A HREF="10-1.htm#idx297">10.1 About String Streams</A>]</UL>
<UL>[in <A HREF="6-4.htm#idx200">6.4.1.6 The String Streams</A>]</UL>
<BR>basic_ofstream &lt;charT,traits&gt; [in <A HREF="9-1.htm#idx264">9.1 About File Streams</A>]
<BR>basic_ofstream [in <A HREF="6-4.htm#idx195">6.4.1.5 The File Streams</A>]
<BR>basic_ostream [in <A HREF="6-4.htm#idx190">6.4.1.4 The Input and Output Streams</A>]
<BR>basic_ostringstream
<UL>[in <A HREF="10-1.htm#idx297">10.1 About String Streams</A>]</UL>
<UL>[in <A HREF="6-4.htm#idx201">6.4.1.6 The String Streams</A>]</UL>
<BR><A NAME="basic_streambuf">basic_streambuf</A>
<UL>[in <A HREF="6-4.htm#idx208">6.4.2.1 The Stream Buffer</A>]</UL>
<UL>interface [in <A HREF="18-1.htm#idx445">18.1.2 The streambuf Interface</A>]</UL>
<UL>overview [in <A HREF="18-1.htm#idx436">18.1.1 The streambuf Hierarchy</A>]</UL>
<BR>basic_stringbuf
<UL>[in <A HREF="18-1.htm#idx439">18.1.1 The streambuf Hierarchy</A>]</UL>
<UL>[in <A HREF="6-4.htm#idx215">6.4.2.3 The String Stream Buffer</A>]</UL>
<BR>basic_stringstream
<UL>[in <A HREF="10-1.htm#idx297">10.1 About String Streams</A>]</UL>
<UL>[in <A HREF="6-4.htm#idx202">6.4.1.6 The String Streams</A>]</UL>
<BR>bidirectional file streams
<UL>no implicit flags [in <A HREF="9-3.htm#idx278">9.3.1.1 The in and out Open Modes</A>]</UL>
<BR>bidirectional streams
<UL>better than sharing stream buffer [in <A HREF="13-3.htm#idx385">13.3.3 Input and Output to the Same Stream</A>]</UL>
<UL>defined [in <A HREF="6-4.htm#idx191">6.4.1.4 The Input and Output Streams</A>]</UL>
<UL>easier for reading and writing [in <A HREF="13-3.htm#idx380">13.3.3 Input and Output to the Same Stream</A>]</UL>
<UL><UL>[in <A HREF="13-3.htm#idx384">13.3.3 Input and Output to the Same Stream</A>]</UL></UL>
<UL>figure [in <A HREF="13-3.htm#idx383">13.3.3 Input and Output to the Same Stream</A>]</UL>
<UL>only one format setting [in <A HREF="13-3.htm#idx382">13.3.3 Input and Output to the Same Stream</A>]</UL>
<UL>with output manipulator [in <A HREF="7-3.htm#idx243">7.3.2 Manipulators</A>]</UL>
<BR>binary I/O, defined [in <A HREF="6-2.htm#idx155">6.2 How Do the Standard Iostreams Work?</A>]
<BR>binary mode [in <A HREF="9-4.htm#idx289">9.4 Binary and Text Mode</A>]
<BR>bit groups [in <A HREF="7-3.htm#idx233">7.3.1.2 Parameters That Can Have Only a Few Different Values</A>]
<BR>boolalpha [in <A HREF="12-2.htm#idx327">12.2.1 Examples of Manipulators without Parameters</A>]
</DL>
<A NAME="c"><H3>c</H3></A>
<DL><BR>C and C++ locales
<UL>relationship [in <A HREF="3-3.htm#idx83">3.3.3  The Relationship between the C Locale and the C++ Locale</A>]</UL>
<BR>C locale
<UL>categories of [in <A HREF="3-1.htm#idx42">3.1 The C Locale</A>]</UL>
<UL>complications in switching [in <A HREF="3-3.htm#idx74">3.3.1 Common Uses of the C locale</A>]</UL>
<UL>default [in <A HREF="3-3.htm#idx63">3.3.1 Common Uses of the C locale</A>]</UL>
<UL>example [in <A HREF="3-3.htm#idx67">3.3.1 Common Uses of the C locale</A>]</UL>
<UL>multiple [in <A HREF="3-3.htm#idx65">3.3.1 Common Uses of the C locale</A>]</UL>
<UL>native [in <A HREF="3-3.htm#idx64">3.3.1 Common Uses of the C locale</A>]</UL>
<UL>representations of [in <A HREF="3-1.htm#idx44">3.1 The C Locale</A>]</UL>
<UL>uses of [in <A HREF="3-3.htm#idx62">3.3.1 Common Uses of the C locale</A>]</UL>
<BR>C stdio, defined [in <A HREF="6-1.htm#idx148">6.1 What Are the Standard Iostreams?</A>]
<BR>C++ locale
<UL> multiple [in <A HREF="3-3.htm#idx79">3.3.2  Common Uses of C++ Locales</A>]</UL>
<UL> native [in <A HREF="3-3.htm#idx77">3.3.2  Common Uses of C++ Locales</A>]</UL>
<UL>a container of facets [in <A HREF="3-2.htm#idx47">3.2 The C++ Locales</A>]</UL>
<UL>classic locale [in <A HREF="3-3.htm#idx76">3.3.2  Common Uses of C++ Locales</A>]</UL>
<UL>global [in <A HREF="3-3.htm#idx80">3.3.2  Common Uses of C++ Locales</A>]</UL>
<UL>named [in <A HREF="3-3.htm#idx78">3.3.2  Common Uses of C++ Locales</A>]</UL>
<UL>uses [in <A HREF="3-3.htm#idx75">3.3.2  Common Uses of C++ Locales</A>]</UL>
<BR>callback functions
<UL>example [in <A HREF="16-2.htm#idx412">16.2 An Example</A>]</UL>
<UL><UL>[in <A HREF="5-9.htm#idx140">5.9.2  Registration of a Callback Function</A>]</UL></UL>
<UL>how used [in <A HREF="16-1.htm#idx411">16.1 Defining Callback Functions</A>]</UL>
<BR>character encodings [in <A HREF="2-3.htm#idx19">2.3 Character Encodings for Localizing Alphabets</A>]
<BR>character traits, stream classes
<UL>[in <A HREF="6-4.htm#idx184">6.4.1.2 The Iostreams Character Type-Dependent Base Class</A>]</UL>
<UL>end-of-file value [in <A HREF="6-4.htm#idx186">6.4.1.3 Character Traits</A>]</UL>
<UL>equality of two characters [in <A HREF="6-4.htm#idx188">6.4.1.3 Character Traits</A>]</UL>
<UL>type of EOF value [in <A HREF="6-4.htm#idx187">6.4.1.3 Character Traits</A>]</UL>
<BR>class templates, file streams [in <A HREF="9-1.htm#idx264">9.1 About File Streams</A>]
<BR>close() [in <A HREF="6-4.htm#idx212">6.4.2.2 The File Buffer</A>]
<BR>code conversion facet, multibyte
<UL>defining character traits type [in <A HREF="19-5.htm#idx475">19.5.2  Define a New Character Traits Type</A>]</UL>
<UL>defining conversion state type [in <A HREF="19-5.htm#idx473">19.5.1  Define a New Conversion State Type</A>]</UL>
<UL>defining the facet [in <A HREF="19-5.htm#idx476">19.5.3  Define the Code Conversion Facet</A>]</UL>
<UL>implementation steps [in <A HREF="19-5.htm#idx472">19.5 Example 2 - Defining a Multibyte Character Code Conversion (JIS <-> Unicode)</A>]</UL>
<UL>using the new facet [in <A HREF="19-5.htm#idx477">19.5.4  Use the New Code Conversion Facet</A>]</UL>
<BR>code conversion facet, tiny character
<UL>deriving new facet type [in <A HREF="19-3.htm#idx465">19.3 Example 1 - Defining a Tiny Character Code Conversion (ASCII <-> EBCDIC)</A>]</UL>
<UL>implementation steps [in <A HREF="19-3.htm#idx464">19.3 Example 1 - Defining a Tiny Character Code Conversion (ASCII <-> EBCDIC)</A>]</UL>
<UL>specializing type, implementing functions [in <A HREF="19-3.htm#idx467">19.3.1  Derive a New Facet Type</A>]</UL>
<UL>using new facet [in <A HREF="19-3.htm#idx469">19.3.3  Use the New Code Conversion Facet</A>]</UL>
<BR>code conversion facets
<UL>error indication [in <A HREF="19-4.htm#idx470">19.4 Error Indication in Code Conversion Facets</A>]</UL>
<UL>overview [in <A HREF="19-1.htm#idx457">19.1 Overview</A>]</UL>
<UL>user-defined type [in <A HREF="20-2.htm#idx483">20.2 Defining Traits and Facets for User-Defined Types</A>]</UL>
<BR>code conversions
<UL>categories of [in <A HREF="19-2.htm#idx458">19.2 Categories of Code Conversions</A>]</UL>
<UL>constant-size [in <A HREF="19-2.htm#idx459">19.2 Categories of Code Conversions</A>]</UL>
<UL>defined [in <A HREF="6-2.htm#idx158">6.2 How Do the Standard Iostreams Work?</A>]</UL>
<UL>in wide character streams [in <A HREF="9-1.htm#idx266">9.1.1 The Difference between Predefined Streams and File Streams</A>]</UL>
<UL>multibyte [in <A HREF="19-2.htm#idx460">19.2 Categories of Code Conversions</A>]</UL>
<UL>performed by code conversion facets [in <A HREF="19-1.htm#idx457">19.1 Overview</A>]</UL>
<UL>state-dependent multibyte [in <A HREF="19-2.htm#idx461">19.2 Categories of Code Conversions</A>]</UL>
<UL>state-independent multibyte [in <A HREF="19-2.htm#idx462">19.2 Categories of Code Conversions</A>]</UL>
<BR>codecvt&lt;internT,externT,stateT&gt; [in <A HREF="3-2.htm#idx58">3.2.1.1 The Standard Facets</A>]
<BR>codesets
<UL>7-bit ASCII [in <A HREF="2-3.htm#idx20">2.3 Character Encodings for Localizing Alphabets</A>]</UL>
<UL>8-bit [in <A HREF="2-3.htm#idx21">2.3 Character Encodings for Localizing Alphabets</A>]</UL>
<UL>multibyte character codes [in <A HREF="2-3.htm#idx22">2.3 Character Encodings for Localizing Alphabets</A>]</UL>
<BR>collate class [in <A HREF="3-2.htm#idx59">3.2.1.1 The Standard Facets</A>]
<BR>collate&lt;charT&gt; [in <A HREF="3-2.htm#idx59">3.2.1.1 The Standard Facets</A>]
<BR>conventions [in <A HREF="1-4.htm#idx6">1.4.2 Conventions</A>]
<BR>conversions, wide character [in <A HREF="3-2.htm#idx58">3.2.1.1 The Standard Facets</A>]
<BR>copyfmt() [in <A HREF="13-2.htm#idx364">13.2.1 Copying a Stream's Data Members</A>]
<BR>cout.getloc() [in <A HREF="4-2.htm#idx100">4.2 Facet Lifetimes</A>]
<BR>ctype class [in <A HREF="3-2.htm#idx57">3.2.1.1 The Standard Facets</A>]
<BR>ctype&lt;charT&gt; [in <A HREF="3-2.htm#idx57">3.2.1.1 The Standard Facets</A>]
</DL>
<A NAME="d"><H3>d</H3></A>
<DL><BR>deprecated features
<UL>[in <A HREF="24-4.htm#idx506">24.4 String Streams</A>]</UL>
<UL>[in <A HREF="25-3.htm#idx512">25.3 Deprecated Features</A>]</UL>
<UL>[in <A HREF="6-4.htm#idx178">6.4.1 The Internal Structure of the Formatting Layer</A>]</UL>
<UL>[in <A HREF="A-1.htm">A.1 Implementation-Dependent Behavior</A>]</UL>
<BR>derived facet types example [in <A HREF="4-1.htm#idx97">4.1 Understanding Facet Types</A>]
<BR>derived facet, defined [in <A HREF="4-1.htm#idx94">4.1 Understanding Facet Types</A>]
<BR>deriving a new stream type [in <A HREF="17-1.htm#idx414">17.1 Deriving a New Stream Type</A>]
<BR>detach(), eliminated [in <A HREF="24-3.htm#idx503">24.3.1  Connecting Files and Streams</A>]
<BR>documentation
<UL>manual organization [in <A HREF="1-4.htm#idx5">1.4.1 Organization</A>]</UL>
<UL>overview [in <A HREF="1-3.htm#idx3">1.3 Documentation Overview</A>]</UL>
<BR>dynamic casts
<UL>alternatives to [in <A HREF="17-4.htm#idx430">17.4.4  A Remark on Performance</A>]</UL>
<UL>example [in <A HREF="17-4.htm#idx425">17.4.2  The Date Inserter</A>]</UL>
<UL>performance issues [in <A HREF="17-4.htm#idx429">17.4.4  A Remark on Performance</A>]</UL>
</DL>
<A NAME="e"><H3>e</H3></A>
<DL><BR>encoding
<UL>Extended Unix Code (EUC) [in <A HREF="2-3.htm#idx34">2.3.1.3  EUC Encoding</A>]</UL>
<UL>JIS [in <A HREF="2-3.htm#idx27">2.3.1 Multibyte Encodings</A>]</UL>
<UL>Shift-JIS [in <A HREF="2-3.htm#idx32">2.3.1.1 JIS Encoding</A>]</UL>
<BR>endl
<UL>[in <A HREF="7-3.htm#idx241">7.3.2 Manipulators</A>]</UL>
<UL>flushes output stream [in <A HREF="12-2.htm#idx329">12.2.2 A Remark on the Manipulator endl</A>]</UL>
<UL>manipulator without parameters [in <A HREF="12-2.htm#idx326">12.2.1 Examples of Manipulators without Parameters</A>]</UL>
<BR>error state of streams [in <A HREF="8-1.htm#idx252">8.1 About Flags</A>]
<BR>errors
<UL>catching exceptions [in <A HREF="8-3.htm#idx261">8.3 Catching Exceptions</A>]</UL>
<UL>checking the stream state [in <A HREF="8-2.htm#idx259">8.2 Checking the Stream State</A>]</UL>
<BR>escape sequences [in <A HREF="2-3.htm#idx29">2.3.1.1 JIS Encoding</A>]
<BR>EUC encoding [in <A HREF="2-3.htm#idx33">2.3.1.2 Shift-JIS Encoding</A>]
<BR>example
<UL> using new code conversion facet [in <A HREF="19-3.htm#idx469">19.3.3  Use the New Code Conversion Facet</A>]</UL>
<UL>activating an exception on an input stream [in <A HREF="8-3.htm#idx261">8.3 Catching Exceptions</A>]</UL>
<UL>adding a constant table to a facet class [in <A HREF="5-5.htm#idx130">5.5.2  Adding Country Codes</A>]</UL>
<UL>adding an arbitrary table to a facet class [in <A HREF="5-5.htm#idx132">5.5.2  Adding Country Codes</A>]</UL>
<UL>adding data members to a facet class [in <A HREF="5-5.htm#idx127">5.5.1 Adding Data Members</A>]</UL>
<UL>base and derived facets [in <A HREF="4-1.htm#idx94">4.1 Understanding Facet Types</A>]</UL>
<UL>changing formats within a shift expression [in <A HREF="7-3.htm#idx238">7.3.2 Manipulators</A>]</UL>
<UL>character classification facet for user-defined type [in <A HREF="20-2.htm#idx484">20.2 Defining Traits and Facets for User-Defined Types</A>]</UL>
<UL>circumventing protected destructors [in <A HREF="4-2.htm#idx103">4.2 Facet Lifetimes</A>]</UL>
<UL>class derived from an output stream [in <A HREF="17-3.htm#idx419">17.3.2 Derivation from the Stream Classes basic_(i/o)stream<></A>]</UL>
<UL>class that registers a callback function [in <A HREF="5-9.htm#idx144">5.9.2  Registration of a Callback Function</A>]</UL>
<UL>closing a file stream [in <A HREF="9-2.htm#idx273">9.2.3 Closing a File Stream</A>]</UL>
<UL>code conversion facet for user-defined type [in <A HREF="20-2.htm#idx483">20.2 Defining Traits and Facets for User-Defined Types</A>]</UL>
<UL>constructing a locale object as a copy [in <A HREF="3-4.htm#idx87">3.4 The Locale Object</A>]</UL>
<UL>conversion code facet, multibyte encoding [in <A HREF="19-5.htm#idx476">19.5.3  Define the Code Conversion Facet</A>]</UL>
<UL>copying a stream's data members [in <A HREF="13-2.htm#idx363">13.2.1 Copying a Stream's Data Members</A>]</UL>
<UL>copying data means copying behavior [in <A HREF="13-2.htm#idx368">13.2.2 Sharing Stream Buffers Inadvertently</A>]</UL>
<UL>creating a German locale [in <A HREF="4-5.htm#idx114">4.5 Modifying a Standard Facet's Behavior</A>]</UL>
<UL>creating a locale with a  new type facet [in <A HREF="4-6.htm#idx116">4.6 Creating a New Base Facet Class</A>]</UL>
<UL>creating a new stream class by derivation [in <A HREF="17-4.htm#idx421">17.4 The Example</A>]</UL>
<UL>creating and using streams instantiated on user-defined types [in <A HREF="20-3.htm#idx485">20.3 Creating and Using Streams Instantiated on User-Defined Types</A>]</UL>
<UL>creating file streams [in <A HREF="9-2.htm#idx267">9.2.1 Creating and Opening File Stream Objects</A>]</UL>
<UL>date format string manipulator [in <A HREF="15-3.htm#idx407">15.3 Another Look at the Date Format String</A>]</UL>
<UL>date inserter for new stream class [in <A HREF="17-4.htm#idx424">17.4.2  The Date Inserter</A>]</UL>
<UL>decimal point not period [in <A HREF="7-4.htm#idx245">7.4 Localization Using the Stream's Locale</A>]</UL>
<UL>declaring specialized code conversion facet type [in <A HREF="19-3.htm#idx468">19.3.2  Specialize the New Facet Type and Implement the Member Functions</A>]</UL>
<UL>defining a base class for output stream manipulators [in <A HREF="17-4.htm#idx426">17.4.3  The Manipulator</A>]</UL>
<UL>defining a new base facet class [in <A HREF="4-6.htm#idx115">4.6 Creating a New Base Facet Class</A>]</UL>
<UL>defining operator&lt;&lt; for tm [in <A HREF="4-4.htm#idx109">4.4 Using a Stream's Facet</A>]</UL>
<UL>derived facet class [in <A HREF="5-6.htm#idx133">5.6 An Example of a Derived Facet Class</A>]</UL>
<UL>deriving code conversion facet type [in <A HREF="19-3.htm#idx466">19.3.1  Derive a New Facet Type</A>]</UL>
<UL>deriving new logstream class [in <A HREF="18-2.htm#idx452">18.2 Deriving New Stream Buffer Classes</A>]</UL>
<UL>deriving new stream buffer class [in <A HREF="18-2.htm#idx450">18.2 Deriving New Stream Buffer Classes</A>]</UL>
<UL>dynamic cast [in <A HREF="17-4.htm#idx425">17.4.2  The Date Inserter</A>]</UL>
<UL>error indication by stream iterators [in <A HREF="22-3.htm#idx491">22.3 Error Indication by Stream Iterators</A>]</UL>
<UL>extracting a manipulator [in <A HREF="12-1.htm#idx321">12.1 A Recap of Manipulators</A>]</UL>
<UL>extractor for user-defined type [in <A HREF="11-3.htm#idx302">11.3 A Simple Extractor and Inserter for the Example</A>]</UL>
<UL>extractor that formats dates [in <A HREF="11-4.htm#idx305">11.4 Improved Extractors and Inserters</A>]</UL>
<UL>facet objects don't need deletion [in <A HREF="4-2.htm#idx99">4.2 Facet Lifetimes</A>]</UL>
<UL>file descriptors for copying stream data [in <A HREF="13-2.htm#idx370">13.2.2 Sharing Stream Buffers Inadvertently</A>]</UL>
<UL>format control using some parameters [in <A HREF="7-3.htm#idx236">7.3.1.2 Parameters That Can Have Only a Few Different Values</A>]</UL>
<UL>formatting phone numbers (long) [in <A HREF="5-1.htm#idx118">5.1 An Example of Formatting Phone Numbers</A>]</UL>
<UL>global C++ locale like C [in <A HREF="3-3.htm#idx82">3.3.2  Common Uses of C++ Locales</A>]</UL>
<UL>imbuing a new locale on a stream [in <A HREF="21-3.htm#idx488">21.3 An Example</A>]</UL>
<UL>implementing a date inserter for a derived stream class [in <A HREF="17-4.htm#idx424">17.4.2  The Date Inserter</A>]</UL>
<UL>implementing a manipulator for output stream manipulators [in <A HREF="17-4.htm#idx427">17.4.3  The Manipulator</A>]</UL>
<UL>implementing formatting with virtual functions [in <A HREF="5-8.htm#idx135">5.8 Formatting Phone Numbers</A>]</UL>
<UL>implementing new logstream class [in <A HREF="18-2.htm#idx453">18.2 Deriving New Stream Buffer Classes</A>]</UL>
<UL>implementing overflow function for stream buffer class [in <A HREF="18-2.htm#idx451">18.2 Deriving New Stream Buffer Classes</A>]</UL>
<UL>implicit synchronization by tying a stream to an output stream [in <A HREF="14-4.htm#idx396">14.4 Implicit Synchronization by Tying Streams</A>]</UL>
<UL>in memory I/0 of strings [in <A HREF="10-1.htm#idx296">10.1 About String Streams</A>]</UL>
<UL>inserter for manipulator with parameter [in <A HREF="12-3.htm#idx334">12.3.2 The Principle of Manipulators with Parameters</A>]</UL>
<UL>inserter for phone number class [in <A HREF="5-4.htm#idx124">5.4 An Inserter for Phone Numbers</A>]</UL>
<UL>inserter for user-defined type [in <A HREF="11-3.htm#idx304">11.3 A Simple Extractor and Inserter for the Example</A>]</UL>
<UL>inserter that formats dates [in <A HREF="11-4.htm#idx308">11.4 Improved Extractors and Inserters</A>]</UL>
<UL>inserter that registers a callback function [in <A HREF="5-9.htm#idx146">5.9.3 Improving the Inserter</A>]</UL>
<UL>iostreams (long) [in <A HREF="5-1.htm#idx118">5.1 An Example of Formatting Phone Numbers</A>]</UL>
<UL>iword() and pword() for RTTI in derived stream class [in <A HREF="17-5.htm#idx432">17.5 Using iword/pword for RTTI in Derived Streams</A>]</UL>
<UL>manipulator extractor [in <A HREF="12-1.htm#idx320">12.1 A Recap of Manipulators</A>]</UL>
<UL>manipulator type manipT [in <A HREF="12-3.htm#idx335">12.3.2 The Principle of Manipulators with Parameters</A>]</UL>
<UL>manipulator without parameters [in <A HREF="12-2.htm#idx326">12.2.1 Examples of Manipulators without Parameters</A>]</UL>
<UL>manipulators with parameters [in <A HREF="12-3.htm#idx343">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>new conversion state type, multibyte encoding [in <A HREF="19-5.htm#idx474">19.5.1  Define a New Conversion State Type</A>]</UL>
<UL>new facet class declaration [in <A HREF="5-3.htm#idx123">5.3 A Phone Number Formatting Facet Class</A>]</UL>
<UL>open mode [in <A HREF="9-3.htm#idx274">9.3 The Open Mode</A>]</UL>
<UL>opening file streams [in <A HREF="9-2.htm#idx268">9.2.1 Creating and Opening File Stream Objects</A>]</UL>
<UL>output manipulator that inserts a certain string [in <A HREF="12-3.htm#idx354">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>pointers instead of copies of stream objects [in <A HREF="13-2.htm#idx371">13.2.3 Using Pointers or References to Streams</A>]</UL>
<UL>primitive caching [in <A HREF="5-9.htm#idx138">5.9.1 Primitive Caching</A>]</UL>
<UL>printing several units in one expression [in <A HREF="7-2.htm#idx224">7.2 Input and Output Operators</A>]</UL>
<UL>processing files in memory with string streams [in <A HREF="13-4.htm#idx386">13.4 Copies of the Stream Buffer</A>]</UL>
<UL>protected destructors [in <A HREF="4-2.htm#idx102">4.2 Facet Lifetimes</A>]</UL>
<UL>references instead of copies of stream objects [in <A HREF="13-2.htm#idx372">13.2.3 Using Pointers or References to Streams</A>]</UL>
<UL>registering a callback function [in <A HREF="16-2.htm#idx412">16.2 An Example</A>]</UL>
<UL><UL>[in <A HREF="5-9.htm#idx140">5.9.2  Registration of a Callback Function</A>]</UL></UL>
<UL>replacing a facet object [in <A HREF="4-5.htm#idx110">4.5 Modifying a Standard Facet's Behavior</A>]</UL>
<UL>retrieving facet data without new/delete [in <A HREF="4-2.htm#idx103">4.2 Facet Lifetimes</A>]</UL>
<UL>seek function version for fixed-width character encoding [in <A HREF="9-5.htm#idx291">9.5 File Positioning</A>]</UL>
<UL>seek functions for iostreams [in <A HREF="9-5.htm#idx295">9.5.1 How Positioning Works with the Iostream Architecture</A>]</UL>
<UL>seeking to a position [in <A HREF="9-5.htm#idx290">9.5 File Positioning</A>]</UL>
<UL>separate file buffer object for copying stream data [in <A HREF="13-2.htm#idx369">13.2.2 Sharing Stream Buffers Inadvertently</A>]</UL>
<UL>setting field width [in <A HREF="7-3.htm#idx235">7.3.1.2 Parameters That Can Have Only a Few Different Values</A>]</UL>
<UL>shared stream buffer for I/O to same stream [in <A HREF="13-3.htm#idx378">13.3.3 Input and Output to the Same Stream</A>]</UL>
<UL>sharing stream buffer for several locales [in <A HREF="13-3.htm#idx375">13.3.2 Several Locales for the Same Stream</A>]</UL>
<UL>sharing stream buffer when output is formatted differently [in <A HREF="13-3.htm#idx374">13.3.1 Several Format Settings for the Same Stream</A>]</UL>
<UL>skipping white space [in <A HREF="7-5.htm#idx249">7.5.1 Skipping Characters</A>]</UL>
<UL>standard facet template numpunct [in <A HREF="4-1.htm#idx95">4.1 Understanding Facet Types</A>]</UL>
<UL>switching locales in C [in <A HREF="3-3.htm#idx67">3.3.1 Common Uses of the C locale</A>]</UL>
<UL>switching locales in C++ [in <A HREF="3-3.htm#idx70">3.3.1 Common Uses of the C locale</A>]</UL>
<UL>switching off the unitbuf flag [in <A HREF="14-3.htm#idx395">14.3 Implicit Synchronization Using the unitbuf Format Flag</A>]</UL>
<UL>telephone number class declaration [in <A HREF="5-2.htm#idx120">5.2 A Phone Number Class</A>]</UL>
<UL>tiny character code conversion [in <A HREF="19-3.htm#idx463">19.3 Example 1 - Defining a Tiny Character Code Conversion (ASCII <-> EBCDIC)</A>]</UL>
<UL>traits class for user-defined type [in <A HREF="20-2.htm#idx482">20.2 Defining Traits and Facets for User-Defined Types</A>]</UL>
<UL>updating a cache with a callback function [in <A HREF="5-9.htm#idx145">5.9.2  Registration of a Callback Function</A>]</UL>
<UL>user-defined facet class (long) [in <A HREF="5-1.htm#idx118">5.1 An Example of Formatting Phone Numbers</A>]</UL>
<UL>user-defined type [in <A HREF="11-2.htm#idx301">11.2 An Example with a User-Defined Type</A>]</UL>
<UL><UL>[in <A HREF="20-1.htm#idx480">20.1.1 Requirements for User-Defined Character Types</A>]</UL></UL>
<UL>use_facet and has_facet [in <A HREF="4-3.htm#idx106">4.3 Accessing a Locale's Facets</A>]</UL>
<UL>use_facet type error [in <A HREF="4-3.htm#idx107">4.3 Accessing a Locale's Facets</A>]</UL>
<UL>using a new facet class [in <A HREF="5-7.htm#idx134">5.7 Using Phone Number Facets</A>]</UL>
<UL>using a stream's facet [in <A HREF="4-4.htm#idx108">4.4 Using a Stream's Facet</A>]</UL>
<UL>using callback functions with a user-defined stream inserter [in <A HREF="5-9.htm#idx141">5.9.2  Registration of a Callback Function</A>]</UL>
<UL>using code conversion facet, multibyte encoding [in <A HREF="19-5.htm#idx477">19.5.4  Use the New Code Conversion Facet</A>]</UL>
<UL>using flush() to flush a stream buffer [in <A HREF="14-2.htm#idx391">14.2.1  Output Streams</A>]</UL>
<UL>using ios_base::unitbuf to flush a stream buffer [in <A HREF="14-3.htm#idx394">14.3 Implicit Synchronization Using the unitbuf Format Flag</A>]</UL>
<UL>using is_open() [in <A HREF="9-2.htm#idx270">9.2.2 Checking a File Stream's Status</A>]</UL>
<UL><UL>[in <A HREF="9-2.htm#idx271">9.2.2 Checking a File Stream's Status</A>]</UL></UL>
<UL>using new log buffer class [in <A HREF="18-2.htm#idx454">18.2 Deriving New Stream Buffer Classes</A>]</UL>
<UL>using sync() to refill a stream buffer [in <A HREF="14-2.htm#idx392">14.2.2  Input Streams</A>]</UL>
<UL>using the ctype facet [in <A HREF="4-3.htm#idx106">4.3 Accessing a Locale's Facets</A>]</UL>
<UL>using time_put facet to print a date [in <A HREF="4-4.htm#idx108">4.4 Using a Stream's Facet</A>]</UL>
<UL>wrong way to write to an output stream [in <A HREF="13-2.htm#idx361">13.2 Copying and Assigning Stream Objects</A>]</UL>
<BR>exception handling
<UL>performance issues [in <A HREF="17-4.htm#idx429">17.4.4  A Remark on Performance</A>]</UL>
<BR>exception mask [in <A HREF="8-3.htm#idx261">8.3 Catching Exceptions</A>]
<BR>exceptions() [in <A HREF="13-2.htm#idx364">13.2.1 Copying a Stream's Data Members</A>]
<BR>explicit synchronization [in <A HREF="14-2.htm#idx390">14.2 Explicit Synchronization</A>]
<BR>extensibility
<UL>manipulators [in <A HREF="12-1.htm#idx319">12.1 A Recap of Manipulators</A>]</UL>
<UL>to new types [in <A HREF="6-1.htm#idx151">6.1.1 Type Safety</A>]</UL>
<UL>user-defined types [in <A HREF="11-1.htm#idx300">11.1 A Note on User-Defined Types</A>]</UL>
<BR>extractors and inserters
<UL>improving [in <A HREF="11-5.htm#idx311">11.5 More Improved Extractors and Inserters</A>]</UL>
<BR>extractors
<UL>[in <A HREF="11-3.htm#idx302">11.3 A Simple Extractor and Inserter for the Example</A>]</UL>
<UL>[in <A HREF="6-4.htm#idx192">6.4.1.4 The Input and Output Streams</A>]</UL>
<UL>[in <A HREF="7-2.htm#idx223">7.2 Input and Output Operators</A>]</UL>
<UL>example with recommended functionality [in <A HREF="11-5.htm#idx313">11.5.1 Applying the Recommendations to the Example</A>]</UL>
<UL>pattern for user-defined types [in <A HREF="11-6.htm#idx316">11.6 Patterns for Extractors and Inserters of User-Defined Types</A>]</UL>
<UL>that format dates [in <A HREF="11-4.htm#idx305">11.4 Improved Extractors and Inserters</A>]</UL>
</DL>
<A NAME="f"><H3>f</H3></A>
<DL><BR>facet objects
<UL>create with new, not on stack [in <A HREF="4-2.htm#idx104">4.2 Facet Lifetimes</A>]</UL>
<UL>deleting unnecessary [in <A HREF="4-2.htm#idx98">4.2 Facet Lifetimes</A>]</UL>
<BR>facet-class, user-defined
<UL>adding an arbitrary table [in <A HREF="5-5.htm#idx132">5.5.2  Adding Country Codes</A>]</UL>
<UL>adding data members [in <A HREF="5-5.htm#idx126">5.5 The Phone Number Facet Class Revisited</A>]</UL>
<UL>adding static data member [in <A HREF="5-5.htm#idx128">5.5.2  Adding Country Codes</A>]</UL>
<UL>base class [in <A HREF="5-3.htm#idx121">5.3 A Phone Number Formatting Facet Class</A>]</UL>
<UL>class declaration [in <A HREF="5-2.htm#idx120">5.2 A Phone Number Class</A>]</UL>
<UL>derived facet class [in <A HREF="5-6.htm#idx133">5.6 An Example of a Derived Facet Class</A>]</UL>
<UL>example begins [in <A HREF="5-1.htm#idx119">5.1 An Example of Formatting Phone Numbers</A>]</UL>
<UL>improved inserter [in <A HREF="5-9.htm#idx146">5.9.3 Improving the Inserter</A>]</UL>
<UL>improving the inserter [in <A HREF="5-9.htm#idx136">5.9 Improving the Inserter Function</A>]</UL>
<UL>information required for [in <A HREF="5-5.htm#idx125">5.5 The Phone Number Facet Class Revisited</A>]</UL>
<UL>initial facet class declaration [in <A HREF="5-3.htm#idx123">5.3 A Phone Number Formatting Facet Class</A>]</UL>
<UL>inserter [in <A HREF="5-4.htm#idx124">5.4 An Inserter for Phone Numbers</A>]</UL>
<UL>memory management [in <A HREF="5-5.htm#idx132">5.5.2  Adding Country Codes</A>]</UL>
<UL>primitive caching [in <A HREF="5-9.htm#idx138">5.9.1 Primitive Caching</A>]</UL>
<UL>registration of callback functions [in <A HREF="5-9.htm#idx140">5.9.2  Registration of a Callback Function</A>]</UL>
<UL>using facet instances [in <A HREF="5-7.htm#idx134">5.7 Using Phone Number Facets</A>]</UL>
<UL>virtual functions for [in <A HREF="5-8.htm#idx135">5.8 Formatting Phone Numbers</A>]</UL>
<BR>facets
<UL>defined [in <A HREF="3-2.htm#idx46">3.2 The C++ Locales</A>]</UL>
<UL><UL>[in <A HREF="3-2.htm#idx49">3.2.1 Facets</A>]</UL></UL>
<UL><UL>[in <A HREF="4-1.htm#idx91">4.1 Understanding Facet Types</A>]</UL></UL>
<UL>difference between base and derived [in <A HREF="4-1.htm#idx93">4.1 Understanding Facet Types</A>]</UL>
<UL>overriding default deletion [in <A HREF="4-2.htm#idx101">4.2 Facet Lifetimes</A>]</UL>
<UL>standard [in <A HREF="3-2.htm#idx50">3.2.1.1 The Standard Facets</A>]</UL>
<UL><UL>[in <A HREF="4-1.htm#idx92">4.1 Understanding Facet Types</A>]</UL></UL>
<BR>failbit [in <A HREF="8-1.htm#idx257">8.1 About Flags</A>]
<BR>field width [in <A HREF="7-3.htm#idx235">7.3.1.2 Parameters That Can Have Only a Few Different Values</A>]
<BR>figure
<UL>adding a new facet to a locale [in <A HREF="4-6.htm#idx117">4.6 Creating a New Base Facet Class</A>]</UL>
<UL>bidirectional stream [in <A HREF="13-3.htm#idx383">13.3.3 Input and Output to the Same Stream</A>]</UL>
<UL>C locale functions and information [in <A HREF="3-1.htm#idx45">3.1 The C Locale</A>]</UL>
<UL>C++ locale as container of facets [in <A HREF="3-2.htm#idx48">3.2 The C++ Locales</A>]</UL>
<UL>character code conversion performed by the file buffer [in <A HREF="6-4.htm#idx213">6.4.2.2 The File Buffer</A>]</UL>
<UL>code conversion between multibyte and wide characters [in <A HREF="6-2.htm#idx159">6.2 How Do the Standard Iostreams Work?</A>]</UL>
<UL>converting from multibyte to wide character encoding [in <A HREF="2-3.htm#idx38">2.3.3 Conversion between Multibyte and Wide Characters</A>]</UL>
<UL>copies of the file content [in <A HREF="13-4.htm#idx387">13.4 Copies of the Stream Buffer</A>]</UL>
<UL>copying a stream's internal data results in a shared buffer [in <A HREF="13-2.htm#idx366">13.2.1 Copying a Stream's Data Members</A>]</UL>
<UL>data transfer supported by iostreams [in <A HREF="6-2.htm#idx154">6.2 How Do the Standard Iostreams Work?</A>]</UL>
<UL>example of JIS encoding [in <A HREF="2-3.htm#idx30">2.3.1.1 JIS Encoding</A>]</UL>
<UL><UL>[in <A HREF="3-3.htm#idx72">3.3.1 Common Uses of the C locale</A>]</UL></UL>
<UL>file I/O [in <A HREF="6-4.htm#idx197">6.4.1.5 The File Streams</A>]</UL>
<UL>formatting program data [in <A HREF="6-2.htm#idx157">6.2 How Do the Standard Iostreams Work?</A>]</UL>
<UL>hierarchy of the transport layer [in <A HREF="6-4.htm#idx206">6.4.2 The Transport Layer's Internal Structure</A>]</UL>
<UL>in-memory I/O [in <A HREF="6-4.htm#idx203">6.4.1.6 The String Streams</A>]</UL>
<UL>input and output streams sharing buffer [in <A HREF="13-3.htm#idx381">13.3.3 Input and Output to the Same Stream</A>]</UL>
<UL>input file stream using a file buffer [in <A HREF="6-4.htm#idx217">6.4.3 Collaboration of Streams and Stream Buffers</A>]</UL>
<UL>input file stream using locales [in <A HREF="6-4.htm#idx219">6.4.4 Collaboration of Locales and Iostreams</A>]</UL>
<UL>internal class hierarchy of the formatting layer [in <A HREF="6-4.htm#idx177">6.4.1 The Internal Structure of the Formatting Layer</A>]</UL>
<UL>iostreams layers [in <A HREF="6-2.htm#idx161">6.2.1 The Iostream Layers</A>]</UL>
<UL><UL>[in <A HREF="6-4.htm#idx175">6.4 The Internal Structure of the Iostreams Layers</A>]</UL></UL>
<UL>Japanese sentence showing writing systems [in <A HREF="2-3.htm#idx26">2.3.1 Multibyte Encodings</A>]</UL>
<UL>locale architecture [in <A HREF="3-4.htm#idx90">3.4 The Locale Object</A>]</UL>
<UL>locale objects and shared stream buffers [in <A HREF="13-3.htm#idx376">13.3.2 Several Locales for the Same Stream</A>]</UL>
<UL>map associating country codes and name mnemonics [in <A HREF="5-5.htm#idx129">5.5.2  Adding Country Codes</A>]</UL>
<UL>map associating country codes with country names [in <A HREF="5-5.htm#idx131">5.5.2  Adding Country Codes</A>]</UL>
<UL>multiple locales in C [in <A HREF="3-3.htm#idx66">3.3.1 Common Uses of the C locale</A>]</UL>
<UL>multiple locales in C++ [in <A HREF="3-3.htm#idx69">3.3.1 Common Uses of the C locale</A>]</UL>
<UL>parsing input from a multibyte file using the global C locale [in <A HREF="3-3.htm#idx73">3.3.1 Common Uses of the C locale</A>]</UL>
<UL>phone_put facet and implementing facets [in <A HREF="5-3.htm#idx122">5.3 A Phone Number Formatting Facet Class</A>]</UL>
<UL>replacing the numpunct&lt;char&gt; facet object [in <A HREF="4-5.htm#idx113">4.5 Modifying a Standard Facet's Behavior</A>]</UL>
<UL>static array parray [in <A HREF="5-9.htm#idx143">5.9.2  Registration of a Callback Function</A>]</UL>
<UL>streambuf class hierarchy [in <A HREF="18-1.htm#idx435">18.1.1 The streambuf Hierarchy</A>]</UL>
<UL>streams sharing a file [in <A HREF="14-1.htm#idx389">14.1 Sharing Files Among Streams</A>]</UL>
<UL>use of locales in iostreams [in <A HREF="6-2.htm#idx165">6.2.1.3 Locales </A>]</UL>
<BR>file buffer, defined [in <A HREF="6-4.htm#idx196">6.4.1.5 The File Streams</A>]
<BR>file conversion
<UL>automatic [in <A HREF="9-4.htm#idx289">9.4 Binary and Text Mode</A>]</UL>
<BR>file descriptors
<UL>[in <A HREF="13-2.htm#idx370">13.2.2 Sharing Stream Buffers Inadvertently</A>]</UL>
<UL>[in <A HREF="24-3.htm#idx502">24.3.1  Connecting Files and Streams</A>]</UL>
<BR>file I/O
<UL>defined [in <A HREF="6-2.htm#idx166">6.2.2 File and In-Memory I/O</A>]</UL>
<BR>file position, defined [in <A HREF="9-3.htm#idx280">9.3.1.2 The Open modes ate, app, and trunc</A>]
<BR>file positioning
<UL>[in <A HREF="9-5.htm#idx290">9.5 File Positioning</A>]</UL>
<UL>in iostream architecture [in <A HREF="9-5.htm#idx294">9.5 File Positioning</A>]</UL>
<BR>file streams
<UL>[in <A HREF="6-4.htm#idx194">6.4.1.5 The File Streams</A>]</UL>
<UL> binary and text mode [in <A HREF="9-4.htm#idx288">9.4 Binary and Text Mode</A>]</UL>
<UL>checking status [in <A HREF="9-2.htm#idx269">9.2.2 Checking a File Stream's Status</A>]</UL>
<UL>closing [in <A HREF="9-2.htm#idx272">9.2.2 Checking a File Stream's Status</A>]</UL>
<UL>creating and opening [in <A HREF="9-2.htm#idx267">9.2.1 Creating and Opening File Stream Objects</A>]</UL>
<UL>file positioning operations [in <A HREF="9-5.htm#idx290">9.5 File Positioning</A>]</UL>
<UL>open mode [in <A HREF="9-3.htm#idx274">9.3 The Open Mode</A>]</UL>
<UL>overview [in <A HREF="9-1.htm#idx263">9.1 About File Streams</A>]</UL>
<BR>flags
<UL>error categories of [in <A HREF="8-1.htm#idx252">8.1 About Flags</A>]</UL>
<UL>format [in <A HREF="7-3.htm#idx232">7.3.1.2 Parameters That Can Have Only a Few Different Values</A>]</UL>
<UL>open mode [in <A HREF="9-3.htm#idx275">9.3.1 The Open Mode Flags</A>]</UL>
<BR>flush() [in <A HREF="14-2.htm#idx391">14.2.1  Output Streams</A>]
<BR>format control [in <A HREF="7-3.htm#idx227">7.3 Format Control Using the Stream's Format State</A>]
<BR>format flags [in <A HREF="7-3.htm#idx232">7.3.1.2 Parameters That Can Have Only a Few Different Values</A>]
<BR>format parameters
<UL>[in <A HREF="7-3.htm#idx228">7.3 Format Control Using the Stream's Format State</A>]</UL>
<UL>arbitrary value [in <A HREF="7-3.htm#idx230">7.3.1.1 Parameters That Can Have an Arbitrary Value</A>]</UL>
<UL>few values [in <A HREF="7-3.htm#idx232">7.3.1.2 Parameters That Can Have Only a Few Different Values</A>]</UL>
<UL>irrelevant for extraction [in <A HREF="7-5.htm#idx247">7.5 Formatted Input</A>]</UL>
<BR>format state variables [in <A HREF="7-3.htm#idx229">7.3.1 Format Parameters</A>]
<BR>formats
<UL>alphabets [in <A HREF="2-2.htm#idx11">2.2.1 Language</A>]</UL>
<UL>currency [in <A HREF="2-2.htm#idx14">2.2.3 Currency</A>]</UL>
<UL>date and time [in <A HREF="2-2.htm#idx16">2.2.4 Time and Date</A>]</UL>
<UL>numbers [in <A HREF="2-2.htm#idx12">2.2.2 Numbers</A>]</UL>
<UL>ordering [in <A HREF="2-2.htm#idx18">2.2.5 Ordering</A>]</UL>
<UL>phone numbers [in <A HREF="5-1.htm#idx119">5.1 An Example of Formatting Phone Numbers</A>]</UL>
<BR>formatted input [in <A HREF="7-5.htm#idx246">7.5 Formatted Input</A>]
<BR>formatting layer
<UL>defined [in <A HREF="6-2.htm#idx162">6.2.1.1 The Formatting Layer </A>]</UL>
<UL>internal structure [in <A HREF="6-4.htm#idx176">6.4.1 The Internal Structure of the Formatting Layer</A>]</UL>
<BR>formatting phone numbers example [in <A HREF="5-1.htm#idx119">5.1 An Example of Formatting Phone Numbers</A>]
<BR>formatting, defined [in <A HREF="6-2.htm#idx156">6.2 How Do the Standard Iostreams Work?</A>]
</DL>
<A NAME="g"><H3>g</H3></A>
<DL><BR>get area, defined [in <A HREF="18-1.htm#idx441">18.1.1 The streambuf Hierarchy</A>]
<BR>get() [in <A HREF="6-4.htm#idx193">6.4.1.4 The Input and Output Streams</A>]
<BR>get_date() [in <A HREF="11-4.htm#idx307">11.4 Improved Extractors and Inserters</A>]
<BR>global locale, snapshots [in <A HREF="3-3.htm#idx81">3.3.2  Common Uses of C++ Locales</A>]
</DL>
<A NAME="h"><H3>h</H3></A>
<DL><BR>handle-body idiom [in <A HREF="3-4.htm#idx89">3.4 The Locale Object</A>]
<BR>has_facet
<UL>[in <A HREF="4-3.htm#idx105">4.3 Accessing a Locale's Facets</A>]</UL>
<UL>type required for [in <A HREF="4-3.htm#idx107">4.3 Accessing a Locale's Facets</A>]</UL>
</DL>
<A NAME="i"><H3>i</H3></A>
<DL><BR>ignore() [in <A HREF="7-5.htm#idx250">7.5.1 Skipping Characters</A>]
<BR>imbuing locales
<UL>new locale [in <A HREF="21-2.htm#idx487">21.2 When to Imbue a New Locale</A>]</UL>
<UL>restrictions on [in <A HREF="21-2.htm#idx487">21.2 When to Imbue a New Locale</A>]</UL>
<BR>imbuing streams [in <A HREF="3-3.htm#idx68">3.3.1 Common Uses of the C locale</A>]
<BR>implicit synchronization
<UL>by tying streams [in <A HREF="14-4.htm#idx396">14.4 Implicit Synchronization by Tying Streams</A>]</UL>
<UL>using the unitbuf flag [in <A HREF="14-3.htm#idx394">14.3 Implicit Synchronization Using the unitbuf Format Flag</A>]</UL>
<BR>in()
<UL>return codes [in <A HREF="19-4.htm#idx471">19.4 Error Indication in Code Conversion Facets</A>]</UL>
<BR>in-memory I/O
<UL>[in <A HREF="10-1.htm#idx296">10.1 About String Streams</A>]</UL>
<UL>defined [in <A HREF="6-2.htm#idx167">6.2.2 File and In-Memory I/O</A>]</UL>
<UL>string streams [in <A HREF="6-4.htm#idx199">6.4.1.6 The String Streams</A>]</UL>
<BR>in-memory parsing and formatting [in <A HREF="10-1.htm#idx296">10.1 About String Streams</A>]
<BR>indexing operator [in <A HREF="4-3.htm#idx105">4.3 Accessing a Locale's Facets</A>]
<BR>initializating a base class [in <A HREF="17-3.htm#idx416">17.3 Construction and Initialization</A>]
<BR>input and output streams [in <A HREF="6-4.htm#idx189">6.4.1.3 Character Traits</A>]
<BR>input of strings [in <A HREF="7-5.htm#idx251">7.5.2 Input of Strings</A>]
<BR>input streams
<UL>synch() function [in <A HREF="14-2.htm#idx392">14.2.2  Input Streams</A>]</UL>
<BR>inserters and extractors
<UL>complexity of [in <A HREF="11-5.htm#idx315">11.5.2 An Afterthought</A>]</UL>
<UL>recommended functionality [in <A HREF="11-5.htm#idx312">11.5 More Improved Extractors and Inserters</A>]</UL>
<BR>inserters
<UL>[in <A HREF="11-3.htm#idx304">11.3 A Simple Extractor and Inserter for the Example</A>]</UL>
<UL>[in <A HREF="6-4.htm#idx192">6.4.1.4 The Input and Output Streams</A>]</UL>
<UL>[in <A HREF="7-2.htm#idx222">7.2 Input and Output Operators</A>]</UL>
<UL>example with recommended functionality [in <A HREF="11-5.htm#idx314">11.5.1 Applying the Recommendations to the Example</A>]</UL>
<UL>for date objects in stream storage [in <A HREF="15-3.htm#idx409">15.3 Another Look at the Date Format String</A>]</UL>
<UL>pattern for user-defined types [in <A HREF="11-6.htm#idx317">11.6 Patterns for Extractors and Inserters of User-Defined Types</A>]</UL>
<BR>internationalization
<UL>[in <A HREF="24-2.htm#idx501">24.2 Internationalization</A>]</UL>
<UL>defined [in <A HREF="2-1.htm#idx8">2.1 Defining the Terms</A>]</UL>
<UL>Standard C++ Library features [in <A HREF="2-4.htm#idx39">2.4 Summary</A>]</UL>
<BR>ios, not a class in standard [in <A HREF="6-4.htm#idx183">6.4.1.2 The Iostreams Character Type-Dependent Base Class</A>]
<BR>iostream class [in <A HREF="6-4.htm#idx191">6.4.1.4 The Input and Output Streams</A>]
<BR>iostreams
<UL>few changes in Standard [in <A HREF="1-2.htm#idx1">1.2 About Locales and Iostreams</A>]</UL>
<UL>Standard C Library [in <A HREF="6-1.htm#idx148">6.1 What Are the Standard Iostreams?</A>]</UL>
<UL>standard vs. Rogue Wave [in <A HREF="25.htm#idx508">Chapter 25 - Standard vs. Rogue Wave Iostreams</A>]</UL>
<UL>standard vs. traditional [in <A HREF="24-1.htm#idx499">24.1 The Character Type</A>]</UL>
<BR>ios_base
<UL>[in <A HREF="6-4.htm#idx179">6.4.1 The Internal Structure of the Formatting Layer</A>]</UL>
<UL>:badbit [in <A HREF="8-1.htm#idx258">8.1 About Flags</A>]</UL>
<UL>:eofbit [in <A HREF="8-1.htm#idx255">8.1 About Flags</A>]</UL>
<UL>:failbit [in <A HREF="8-1.htm#idx256">8.1 About Flags</A>]</UL>
<UL>:goodbit [in <A HREF="8-1.htm#idx254">8.1 About Flags</A>]</UL>
<UL>:openmode [in <A HREF="9-3.htm#idx275">9.3.1 The Open Mode Flags</A>]</UL>
<BR>istream [in <A HREF="6-4.htm#idx191">6.4.1.4 The Input and Output Streams</A>]
<BR>istrstream
<UL>deprecated [in <A HREF="24-4.htm#idx506">24.4 String Streams</A>]</UL>
<UL><UL>[in <A HREF="6-4.htm#idx178">6.4.1 The Internal Structure of the Formatting Layer</A>]</UL></UL>
<BR>is_open() [in <A HREF="9-2.htm#idx270">9.2.2 Checking a File Stream's Status</A>]
<BR>iword() [in <A HREF="15-2.htm#idx404">15.2 An Example - Storing a Date Format String </A>]
</DL>
<A NAME="j"><H3>j</H3></A>
<DL><BR>Japanese encodings [in <A HREF="2-3.htm#idx24">2.3.1 Multibyte Encodings</A>]
<BR>Japanese Industrial Standard (JIS) encoding [in <A HREF="2-3.htm#idx28">2.3.1.1 JIS Encoding</A>]
<BR>Japanese sentence example [in <A HREF="2-3.htm#idx25">2.3.1 Multibyte Encodings</A>]
<BR>JIS encoding example [in <A HREF="2-3.htm#idx29">2.3.1.1 JIS Encoding</A>]
</DL>
<A NAME="l"><H3>l</H3></A>
<DL><BR>LC_COLLATE [in <A HREF="3-2.htm#idx50">3.2.1.1 The Standard Facets</A>]
<BR>LC_CTYPE [in <A HREF="3-2.htm#idx50">3.2.1.1 The Standard Facets</A>]
<BR>LC_MESSAGES [in <A HREF="3-2.htm#idx50">3.2.1.1 The Standard Facets</A>]
<BR>LC_MONETARY [in <A HREF="3-2.htm#idx50">3.2.1.1 The Standard Facets</A>]
<BR>LC_NUMERIC [in <A HREF="3-2.htm#idx50">3.2.1.1 The Standard Facets</A>]
<BR>LC_TIME [in <A HREF="3-2.htm#idx50">3.2.1.1 The Standard Facets</A>]
<BR>locale objects
<UL>[in <A HREF="3-4.htm#idx84">3.4 The Locale Object</A>]</UL>
<UL>building by composition [in <A HREF="3-4.htm#idx86">3.4 The Locale Object</A>]</UL>
<UL>constructing as a copy [in <A HREF="3-4.htm#idx87">3.4 The Locale Object</A>]</UL>
<UL>copying is cheap [in <A HREF="3-4.htm#idx88">3.4 The Locale Object</A>]</UL>
<UL>immutability of [in <A HREF="3-4.htm#idx85">3.4 The Locale Object</A>]</UL>
<UL>like container or map [in <A HREF="4-3.htm#idx105">4.3 Accessing a Locale's Facets</A>]</UL>
<BR>locale
<UL>:locale() [in <A HREF="3-3.htm#idx81">3.3.2  Common Uses of C++ Locales</A>]</UL>
<UL>and iostreams [in <A HREF="6-4.htm#idx218">6.4.3 Collaboration of Streams and Stream Buffers</A>]</UL>
<UL>and the formatting and transport layers [in <A HREF="6-2.htm#idx164">6.2.1.3 Locales </A>]</UL>
<UL>changed in Standard [in <A HREF="1-2.htm#idx2">1.2 About Locales and Iostreams</A>]</UL>
<UL>constructors of the class [in <A HREF="3-4.htm#idx86">3.4 The Locale Object</A>]</UL>
<UL>differences between C and C++ [in <A HREF="3-3.htm#idx61">3.3 Differences between the C Locale and the C++ Locales</A>]</UL>
<UL>functions of the class [in <A HREF="3-4.htm#idx84">3.4 The Locale Object</A>]</UL>
<UL>global, snapshots [in <A HREF="3-3.htm#idx81">3.3.2  Common Uses of C++ Locales</A>]</UL>
<UL>in C [in <A HREF="3-1.htm#idx40">3.1 The C Locale</A>]</UL>
<UL><UL>[in <A HREF="3-1.htm#idx42">3.1 The C Locale</A>]</UL></UL>
<UL>use with iostreams [in <A HREF="21-1.htm#idx486">21.1 Locales and Iostreams</A>]</UL>
<UL>when to imbue new locale [in <A HREF="21-2.htm#idx487">21.2 When to Imbue a New Locale</A>]</UL>
<BR>localization
<UL>alphabet [in <A HREF="2-2.htm#idx11">2.2.1 Language</A>]</UL>
<UL>character encodings [in <A HREF="2-3.htm#idx19">2.3 Character Encodings for Localizing Alphabets</A>]</UL>
<UL>collating sequence [in <A HREF="2-2.htm#idx18">2.2.5 Ordering</A>]</UL>
<UL>currency [in <A HREF="2-2.htm#idx13">2.2.2 Numbers</A>]</UL>
<UL>defined [in <A HREF="2-1.htm#idx9">2.1 Defining the Terms</A>]</UL>
<UL>language [in <A HREF="2-2.htm#idx10">2.2.1 Language</A>]</UL>
<UL>numbers [in <A HREF="2-2.htm#idx12">2.2.2 Numbers</A>]</UL>
<UL>ordering [in <A HREF="2-2.htm#idx17">2.2.4 Time and Date</A>]</UL>
<UL>time and date [in <A HREF="2-2.htm#idx15">2.2.3 Currency</A>]</UL>
<UL>using stream's locale [in <A HREF="7-4.htm#idx245">7.4 Localization Using the Stream's Locale</A>]</UL>
<BR>locking mechanism
<UL>for multithreading [in <A HREF="23-2.htm#idx494">23.2 The Locking Mechanism</A>]</UL>
<UL>location of locks [in <A HREF="23-3.htm#idx498">23.3 The Location of Locks</A>]</UL>
<UL>locking several stream operations [in <A HREF="23-2.htm#idx497">23.2.2 Locking Several Stream Operations</A>]</UL>
<UL>protecting the buffer [in <A HREF="23-2.htm#idx496">23.2.1 Protecting the Buffer</A>]</UL>
</DL>
<A NAME="m"><H3>m</H3></A>
<DL><BR>Manip(x)
<UL>as call to function object [in <A HREF="12-3.htm#idx339">12.3.2 The Principle of Manipulators with Parameters</A>]</UL>
<UL>as constructor call [in <A HREF="12-3.htm#idx338">12.3.2 The Principle of Manipulators with Parameters</A>]</UL>
<UL>as function call [in <A HREF="12-3.htm#idx337">12.3.2 The Principle of Manipulators with Parameters</A>]</UL>
<BR>manipT
<UL>[in <A HREF="12-3.htm#idx335">12.3.2 The Principle of Manipulators with Parameters</A>]</UL>
<UL>defined [in <A HREF="12-1.htm#idx320">12.1 A Recap of Manipulators</A>]</UL>
<BR>manipulator extractor [in <A HREF="12-1.htm#idx320">12.1 A Recap of Manipulators</A>]
<BR>manipulator, date format string [in <A HREF="15-3.htm#idx406">15.3 Another Look at the Date Format String</A>]
<BR>manipulator, date storage string
<UL>who owns it [in <A HREF="15-4.htm#idx410">15.4 Caveat</A>]</UL>
<BR>manipulators with parameters
<UL>defined [in <A HREF="12-3.htm#idx332">12.3.2 The Principle of Manipulators with Parameters</A>]</UL>
<UL>example using function object and static member function [in <A HREF="12-3.htm#idx353">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>example using function object and virtual member function [in <A HREF="12-3.htm#idx358">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>example using function pointer and global function [in <A HREF="12-3.htm#idx344">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>example using unnamed object and static member function [in <A HREF="12-3.htm#idx346">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>example using unnamed Object and virtual member function [in <A HREF="12-3.htm#idx348">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>examples of [in <A HREF="12-3.htm#idx342">12.3.2 The Principle of Manipulators with Parameters</A>]</UL>
<UL>implementation techniques [in <A HREF="12-3.htm#idx333">12.3.2 The Principle of Manipulators with Parameters</A>]</UL>
<UL>Rogue Wave implementation technique [in <A HREF="12-3.htm#idx330">12.3.1 The Standard Manipulators</A>]</UL>
<UL><UL>[in <A HREF="12-3.htm#idx345">12.3.3 Examples of Manipulators with Parameters</A>]</UL></UL>
<BR>manipulators without parameters
<UL>boolalpha [in <A HREF="12-2.htm#idx327">12.2.1 Examples of Manipulators without Parameters</A>]</UL>
<UL>endl [in <A HREF="12-2.htm#idx326">12.2.1 Examples of Manipulators without Parameters</A>]</UL>
<UL>general [in <A HREF="12-2.htm#idx328">12.2.1 Examples of Manipulators without Parameters</A>]</UL>
<BR>manipulators [in <A HREF="7-3.htm#idx237">7.3.1.2 Parameters That Can Have Only a Few Different Values</A>]
<BR>manipulators, base type allowing output stream references
<UL>[in <A HREF="12-3.htm#idx355">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>function object for [in <A HREF="12-3.htm#idx357">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>inserter for [in <A HREF="12-3.htm#idx356">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<BR>manipulators, implementation techniques
<UL>choosing associated functions [in <A HREF="12-3.htm#idx340">12.3.2 The Principle of Manipulators with Parameters</A>]</UL>
<UL><UL>[in <A HREF="12-3.htm#idx341">12.3.2 The Principle of Manipulators with Parameters</A>]</UL></UL>
<UL>comparison [in <A HREF="12-3.htm#idx340">12.3.2 The Principle of Manipulators with Parameters</A>]</UL>
<UL>solutions for Manip(X) [in <A HREF="12-3.htm#idx336">12.3.2 The Principle of Manipulators with Parameters</A>]</UL>
<BR>manipulators
<UL>abstract type differs from smanip [in <A HREF="12-3.htm#idx350">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>abstract type [in <A HREF="12-3.htm#idx349">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>advantages of associating virtual member functions [in <A HREF="12-3.htm#idx360">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>defined [in <A HREF="7-3.htm#idx239">7.3.2 Manipulators</A>]</UL>
<UL>derived from smanip [in <A HREF="12-3.htm#idx347">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>extractors for input streams [in <A HREF="12-2.htm#idx324">12.2 Manipulators without Parameters</A>]</UL>
<UL>extractors for output streams [in <A HREF="12-2.htm#idx325">12.2 Manipulators without Parameters</A>]</UL>
<UL>for output streams [in <A HREF="12-3.htm#idx352">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>function pointer types [in <A HREF="12-2.htm#idx323">12.2 Manipulators without Parameters</A>]</UL>
<UL>input and output streams [in <A HREF="12-2.htm#idx327">12.2.1 Examples of Manipulators without Parameters</A>]</UL>
<UL>inserter for abstract type [in <A HREF="12-3.htm#idx351">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>operation of [in <A HREF="7-3.htm#idx240">7.3.2 Manipulators</A>]</UL>
<UL>output manipulator that inserts a certain string [in <A HREF="12-3.htm#idx354">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>output streams [in <A HREF="12-2.htm#idx326">12.2.1 Examples of Manipulators without Parameters</A>]</UL>
<UL>summary [in <A HREF="12-1.htm#idx318">12.1 A Recap of Manipulators</A>]</UL>
<UL>that store additional data [in <A HREF="12-3.htm#idx359">12.3.3 Examples of Manipulators with Parameters</A>]</UL>
<UL>type requirements [in <A HREF="12-1.htm#idx320">12.1 A Recap of Manipulators</A>]</UL>
<UL>without parameters [in <A HREF="12-2.htm#idx322">12.2 Manipulators without Parameters</A>]</UL>
<BR>messages class [in <A HREF="3-2.htm#idx60">3.2.1.1 The Standard Facets</A>]
<BR>messages&lt;charT&gt; [in <A HREF="3-2.htm#idx60">3.2.1.1 The Standard Facets</A>]
<BR>monetary classes [in <A HREF="3-2.htm#idx55">3.2.1.1 The Standard Facets</A>]
<BR>moneypunct&lt;charT,bool&gt; [in <A HREF="3-2.htm#idx56">3.2.1.1 The Standard Facets</A>]
<BR>money_get&lt;charT,InputIterator&gt; [in <A HREF="3-2.htm#idx55">3.2.1.1 The Standard Facets</A>]
<BR>money_put&lt;charT,OutputIterator&gt; [in <A HREF="3-2.htm#idx55">3.2.1.1 The Standard Facets</A>]
<BR>multibyte character encodings
<UL>[in <A HREF="2-3.htm#idx23">2.3.1 Multibyte Encodings</A>]</UL>
<UL>uses of [in <A HREF="2-3.htm#idx35">2.3.1.4  Uses of the Three Multibyte Encodings</A>]</UL>
<BR>multibyte characters, converting to wide [in <A HREF="2-3.htm#idx37">2.3.2  Wide Characters</A>]
<BR>Multithread-Safe
<UL>Level 2 [in <A HREF="23-1.htm#idx493">23.1 Multithread-Safe - Level 2</A>]</UL>
<BR>multithreading
<UL>defining Multithread-Safe, Level 2 [in <A HREF="23-1.htm#idx493">23.1 Multithread-Safe - Level 2</A>]</UL>
<UL>locking mechanism [in <A HREF="23-2.htm#idx494">23.2 The Locking Mechanism</A>]</UL>
<BR>mutex objects [in <A HREF="23-2.htm#idx494">23.2 The Locking Mechanism</A>]
</DL>
<A NAME="n"><H3>n</H3></A>
<DL><BR>Native Language Support (NLS) [in <A HREF="3-1.htm#idx41">3.1 The C Locale</A>]
<BR>new
<UL>facet object creation [in <A HREF="4-2.htm#idx104">4.2 Facet Lifetimes</A>]</UL>
<BR>NLS [in <A HREF="3-1.htm#idx41">3.1 The C Locale</A>]
<BR>noskipws [in <A HREF="7-5.htm#idx249">7.5.1 Skipping Characters</A>]
<BR>numeric classes [in <A HREF="3-2.htm#idx52">3.2.1.1 The Standard Facets</A>]
<BR>numpunct facet interface [in <A HREF="4-5.htm#idx111">4.5 Modifying a Standard Facet's Behavior</A>]
<BR>numpunct&lt;charT&gt; [in <A HREF="3-2.htm#idx53">3.2.1.1 The Standard Facets</A>]
<BR>num_get&lt;charT,InputIterator&gt; [in <A HREF="3-2.htm#idx52">3.2.1.1 The Standard Facets</A>]
<BR>num_put&lt;charT,OutputIterator&gt; [in <A HREF="3-2.htm#idx52">3.2.1.1 The Standard Facets</A>]
</DL>
<A NAME="o"><H3>o</H3></A>
<DL><BR>open mode
<UL>binary [in <A HREF="9-4.htm#idx288">9.4 Binary and Text Mode</A>]</UL>
<UL>flags [in <A HREF="9-3.htm#idx275">9.3.1 The Open Mode Flags</A>]</UL>
<UL>overview [in <A HREF="9-3.htm#idx274">9.3 The Open Mode</A>]</UL>
<BR>open modes
<UL>ate, app, and trunc [in <A HREF="9-3.htm#idx279">9.3.1.1 The in and out Open Modes</A>]</UL>
<UL>binary [in <A HREF="9-3.htm#idx283">9.3.1.2 The Open modes ate, app, and trunc</A>]</UL>
<UL><UL>[in <A HREF="9-4.htm#idx288">9.4 Binary and Text Mode</A>]</UL></UL>
<UL>combining [in <A HREF="9-3.htm#idx284">9.3.2 Combining Open Modes</A>]</UL>
<UL>default [in <A HREF="9-3.htm#idx286">9.3.3 Default Open Modes</A>]</UL>
<UL>for string streams [in <A HREF="10-3.htm#idx299">10.3 The Open Modes</A>]</UL>
<UL>in and out [in <A HREF="9-3.htm#idx277">9.3.1.1 The in and out Open Modes</A>]</UL>
<BR>open() [in <A HREF="6-4.htm#idx212">6.4.2.2 The File Buffer</A>]
<BR>operator&gt;&gt;()
<UL>[in <A HREF="6-4.htm#idx192">6.4.1.4 The Input and Output Streams</A>]</UL>
<UL>[in <A HREF="7-2.htm#idx223">7.2 Input and Output Operators</A>]</UL>
<BR>operator&lt;&lt;()
<UL>[in <A HREF="6-4.htm#idx192">6.4.1.4 The Input and Output Streams</A>]</UL>
<UL>[in <A HREF="7-2.htm#idx222">7.2 Input and Output Operators</A>]</UL>
<BR>ostream [in <A HREF="6-4.htm#idx191">6.4.1.4 The Input and Output Streams</A>]
<BR>ostrstream
<UL>deprecated [in <A HREF="24-4.htm#idx506">24.4 String Streams</A>]</UL>
<UL><UL>[in <A HREF="6-4.htm#idx178">6.4.1 The Internal Structure of the Formatting Layer</A>]</UL></UL>
<BR>out()
<UL>return codes [in <A HREF="19-4.htm#idx471">19.4 Error Indication in Code Conversion Facets</A>]</UL>
<BR>output streams
<UL>flush() function [in <A HREF="14-2.htm#idx391">14.2.1  Output Streams</A>]</UL>
<BR>out|trunc [in <A HREF="9-3.htm#idx282">9.3.1.2 The Open modes ate, app, and trunc</A>]
<BR>overflow() area, defined [in <A HREF="18-1.htm#idx442">18.1.1 The streambuf Hierarchy</A>]
<BR>overflow() [in <A HREF="6-4.htm#idx209">6.4.2.1 The Stream Buffer</A>]
</DL>
<A NAME="p"><H3>p</H3></A>
<DL><BR>performance issues
<UL>dynamic casts and exception handling [in <A HREF="17-4.htm#idx428">17.4.3  The Manipulator</A>]</UL>
<BR>phoneNo [in <A HREF="5-2.htm#idx120">5.2 A Phone Number Class</A>]
<BR>phone_put [in <A HREF="5-3.htm#idx123">5.3 A Phone Number Formatting Facet Class</A>]
<BR>predefined streams
<UL>[in <A HREF="7-1.htm#idx220">7.1 The Predefined Streams</A>]</UL>
<UL>are synchronous streams [in <A HREF="14-5.htm#idx397">14.5 Synchronizing the Predefined Standard Streams</A>]</UL>
<UL>differences with file streams [in <A HREF="9-1.htm#idx265">9.1 About File Streams</A>]</UL>
<UL>input and output [in <A HREF="7-2.htm#idx222">7.2 Input and Output Operators</A>]</UL>
<BR>primitive caching [in <A HREF="5-9.htm#idx137">5.9 Improving the Inserter Function</A>]
<BR>pubsync() [in <A HREF="14-2.htm#idx390">14.2 Explicit Synchronization</A>]
<BR>put area, defined [in <A HREF="18-1.htm#idx441">18.1.1 The streambuf Hierarchy</A>]
<BR>put()
<UL>[in <A HREF="11-4.htm#idx310">11.4 Improved Extractors and Inserters</A>]</UL>
<UL>[in <A HREF="6-4.htm#idx193">6.4.1.4 The Input and Output Streams</A>]</UL>
<BR>put_country_code() [in <A HREF="5-8.htm#idx135">5.8 Formatting Phone Numbers</A>]
<BR>put_domestic_area_code() [in <A HREF="5-8.htm#idx135">5.8 Formatting Phone Numbers</A>]
<BR>pword() [in <A HREF="15-2.htm#idx404">15.2 An Example - Storing a Date Format String </A>]
</DL>
<A NAME="r"><H3>r</H3></A>
<DL><BR>radix character [in <A HREF="2-2.htm#idx12">2.2.2 Numbers</A>]
<BR>rdbuf()
<UL>[in <A HREF="13-2.htm#idx365">13.2.1 Copying a Stream's Data Members</A>]</UL>
<UL>[in <A HREF="13-2.htm#idx367">13.2.2 Sharing Stream Buffers Inadvertently</A>]</UL>
<UL>[in <A HREF="13-3.htm#idx379">13.3.3 Input and Output to the Same Stream</A>]</UL>
<UL>[in <A HREF="13-4.htm#idx386">13.4 Copies of the Stream Buffer</A>]</UL>
<BR>reference counting [in <A HREF="3-4.htm#idx89">3.4 The Locale Object</A>]
<BR>registerCallback_t [in <A HREF="5-9.htm#idx146">5.9.3 Improving the Inserter</A>]
<BR>registration of callback functions
<UL>[in <A HREF="16-2.htm#idx412">16.2 An Example</A>]</UL>
<UL>[in <A HREF="5-9.htm#idx139">5.9.1 Primitive Caching</A>]</UL>
<BR>replacing a facet [in <A HREF="4-5.htm#idx112">4.5 Modifying a Standard Facet's Behavior</A>]
<BR>restrictions
<UL>imbuing locales [in <A HREF="21-2.htm#idx487">21.2 When to Imbue a New Locale</A>]</UL>
<UL>on connecting streambuf objects [in <A HREF="18-3.htm#idx456">18.3 Connecting iostream and streambuf Objects</A>]</UL>
<UL>on Rogue Wave Standard C++ Library [in <A HREF="25-2.htm#idx511">25.2 Restrictions</A>]</UL>
<UL>on standard iostreams [in <A HREF="6-3.htm#idx172">6.3 How Do the Standard Iostreams Help Solve Problems?</A>]</UL>
<UL>user-defined types [in <A HREF="20-1.htm#idx479">20.1.1 Requirements for User-Defined Character Types</A>]</UL>
<BR>return codes, in and out functions [in <A HREF="19-4.htm#idx471">19.4 Error Indication in Code Conversion Facets</A>]
<BR>runtime-type identification (RTTI) [in <A HREF="17-5.htm#idx431">17.5 Using iword/pword for RTTI in Derived Streams</A>]
</DL>
<A NAME="s"><H3>s</H3></A>
<DL><BR>safety
<UL>in connecting iostreams and streambufs [in <A HREF="18-3.htm#idx455">18.3 Connecting iostream and streambuf Objects</A>]</UL>
<BR>seek functions
<UL>for ifstream [in <A HREF="9-5.htm#idx293">9.5 File Positioning</A>]</UL>
<UL>for iostream classes [in <A HREF="9-5.htm#idx295">9.5.1 How Positioning Works with the Iostream Architecture</A>]</UL>
<UL>for ofstream [in <A HREF="9-5.htm#idx291">9.5 File Positioning</A>]</UL>
<BR>seekp [in <A HREF="9-5.htm#idx291">9.5 File Positioning</A>]
<BR>sentry objects [in <A HREF="23-2.htm#idx495">23.2 The Locking Mechanism</A>]
<BR>setw [in <A HREF="7-3.htm#idx242">7.3.2 Manipulators</A>]
<BR>shift operators, defined [in <A HREF="7-2.htm#idx225">7.2 Input and Output Operators</A>]
<BR>shift sequences [in <A HREF="2-3.htm#idx29">2.3.1.1 JIS Encoding</A>]
<BR>shift state
<UL>[in <A HREF="2-3.htm#idx31">2.3.1.1 JIS Encoding</A>]</UL>
<UL>maintaining in C locale [in <A HREF="3-3.htm#idx71">3.3.1 Common Uses of the C locale</A>]</UL>
<BR>Shift-JIS encoding [in <A HREF="2-3.htm#idx32">2.3.1.1 JIS Encoding</A>]
<BR>skipping characters [in <A HREF="7-5.htm#idx248">7.5 Formatted Input</A>]
<BR>smanip class template [in <A HREF="12-3.htm#idx331">12.3.1 The Standard Manipulators</A>]
<BR>snapshots, current global locale [in <A HREF="3-3.htm#idx81">3.3.2  Common Uses of C++ Locales</A>]
<BR>Standard C++ Library
<UL>internationalization features [in <A HREF="2-4.htm#idx39">2.4 Summary</A>]</UL>
<UL>locales and iostreams [in <A HREF="1-2.htm#idx2">1.2 About Locales and Iostreams</A>]</UL>
<BR>standard facet classes
<UL>[in <A HREF="3-2.htm#idx51">3.2.1.1 The Standard Facets</A>]</UL>
<UL>collate [in <A HREF="3-2.htm#idx59">3.2.1.1 The Standard Facets</A>]</UL>
<UL>ctype [in <A HREF="3-2.htm#idx57">3.2.1.1 The Standard Facets</A>]</UL>
<UL>messages [in <A HREF="3-2.htm#idx60">3.2.1.1 The Standard Facets</A>]</UL>
<UL>monetary [in <A HREF="3-2.htm#idx55">3.2.1.1 The Standard Facets</A>]</UL>
<UL>numeric [in <A HREF="3-2.htm#idx52">3.2.1.1 The Standard Facets</A>]</UL>
<UL>time [in <A HREF="3-2.htm#idx54">3.2.1.1 The Standard Facets</A>]</UL>
<BR>standard facets
<UL>[in <A HREF="4-1.htm#idx92">4.1 Understanding Facet Types</A>]</UL>
<UL>defined as templates [in <A HREF="4-1.htm#idx95">4.1 Understanding Facet Types</A>]</UL>
<UL>modifying behavior [in <A HREF="4-5.htm#idx110">4.5 Modifying a Standard Facet's Behavior</A>]</UL>
<UL>protected destructors [in <A HREF="4-2.htm#idx102">4.2 Facet Lifetimes</A>]</UL>
<BR>standard iostreams changes
<UL>connecting files and streams [in <A HREF="24-3.htm#idx502">24.3.1  Connecting Files and Streams</A>]</UL>
<UL>file buffer [in <A HREF="24-3.htm#idx504">24.3.2  The File Buffer</A>]</UL>
<UL>internationalization [in <A HREF="24-2.htm#idx501">24.2 Internationalization</A>]</UL>
<UL>streams with assign [in <A HREF="24-5.htm#idx507">24.5 Streams with Assign</A>]</UL>
<UL>string streams [in <A HREF="24-4.htm#idx505">24.4 String Streams</A>]</UL>
<UL>templatized types [in <A HREF="24-1.htm#idx499">24.1 The Character Type</A>]</UL>
<BR>standard iostreams, Rogue Wave differences
<UL>[in <A HREF="25.htm#idx508">Chapter 25 - Standard vs. Rogue Wave Iostreams</A>]</UL>
<UL>deprecated features [in <A HREF="25-3.htm#idx512">25.3 Deprecated Features</A>]</UL>
<UL>file descriptors [in <A HREF="25-1.htm#idx509">25.1.1  File Descriptors</A>]</UL>
<UL>multithreading [in <A HREF="25-1.htm#idx510">25.1.2  Multithreaded Environments</A>]</UL>
<UL>restrictions [in <A HREF="25-2.htm#idx511">25.2 Restrictions</A>]</UL>
<BR>standard iostreams
<UL>defined [in <A HREF="6-1.htm#idx147">6.1 What Are the Standard Iostreams?</A>]</UL>
<UL>deprecated features [in <A HREF="24-4.htm#idx506">24.4 String Streams</A>]</UL>
<UL><UL>[in <A HREF="6-4.htm#idx178">6.4.1 The Internal Structure of the Formatting Layer</A>]</UL></UL>
<UL>differ from traditional [in <A HREF="24-1.htm#idx500">24.1 The Character Type</A>]</UL>
<UL>extending iostreams [in <A HREF="6-3.htm#idx173">6.3 How Do the Standard Iostreams Help Solve Problems?</A>]</UL>
<UL>formatting layer [in <A HREF="6-4.htm#idx176">6.4.1 The Internal Structure of the Formatting Layer</A>]</UL>
<UL>formatting options [in <A HREF="7-2.htm#idx226">7.2 Input and Output Operators</A>]</UL>
<UL>how they work [in <A HREF="6-2.htm#idx153">6.2 How Do the Standard Iostreams Work?</A>]</UL>
<UL>layers of [in <A HREF="6-2.htm#idx160">6.2.1 The Iostream Layers</A>]</UL>
<UL><UL>[in <A HREF="6-4.htm#idx174">6.4 The Internal Structure of the Iostreams Layers</A>]</UL></UL>
<UL>transport layer [in <A HREF="6-4.htm#idx205">6.4.2 The Transport Layer's Internal Structure</A>]</UL>
<UL>used for binary I/O [in <A HREF="6-3.htm#idx172">6.3 How Do the Standard Iostreams Help Solve Problems?</A>]</UL>
<UL>used for file I/O [in <A HREF="6-3.htm#idx169">6.3 How Do the Standard Iostreams Help Solve Problems?</A>]</UL>
<UL>used for in-memory I/O [in <A HREF="6-3.htm#idx170">6.3 How Do the Standard Iostreams Help Solve Problems?</A>]</UL>
<UL>used for internationalized text processing [in <A HREF="6-3.htm#idx171">6.3 How Do the Standard Iostreams Help Solve Problems?</A>]</UL>
<UL>when to use [in <A HREF="6-3.htm#idx168">6.3 How Do the Standard Iostreams Help Solve Problems?</A>]</UL>
<BR>standard streams, predefined [in <A HREF="7-1.htm#idx220">7.1 The Predefined Streams</A>]
<BR>static array parray [in <A HREF="5-9.htm#idx142">5.9.2  Registration of a Callback Function</A>]
<BR>stdio
<UL>compared with standard iostreams [in <A HREF="6-1.htm#idx150">6.1.1 Type Safety</A>]</UL>
<UL>defined [in <A HREF="6-1.htm#idx148">6.1 What Are the Standard Iostreams?</A>]</UL>
<BR>stream buffer classes
<UL>[in <A HREF="6-4.htm#idx205">6.4.2 The Transport Layer's Internal Structure</A>]</UL>
<UL>abstract stream buffer [in <A HREF="6-4.htm#idx207">6.4.2.1 The Stream Buffer</A>]</UL>
<UL>file buffer [in <A HREF="6-4.htm#idx210">6.4.2.2 The File Buffer</A>]</UL>
<UL>string stream buffer [in <A HREF="6-4.htm#idx214">6.4.2.2 The File Buffer</A>]</UL>
<BR>stream buffers, when to share
<UL>for I/O to same stream [in <A HREF="13-3.htm#idx378">13.3.3 Input and Output to the Same Stream</A>]</UL>
<UL>for several format settings for same stream [in <A HREF="13-3.htm#idx374">13.3.1 Several Format Settings for the Same Stream</A>]</UL>
<UL>for several locales for same stream [in <A HREF="13-3.htm#idx375">13.3.2 Several Locales for the Same Stream</A>]</UL>
<BR>stream buffers. See <A HREF="#streambuf">streambuf</A>
 
<BR>stream buffers
<UL>copies for processing files [in <A HREF="13-4.htm#idx386">13.4 Copies of the Stream Buffer</A>]</UL>
<UL>deriving new [in <A HREF="18-2.htm#idx450">18.2 Deriving New Stream Buffer Classes</A>]</UL>
<UL>get area [in <A HREF="18-1.htm#idx441">18.1.1 The streambuf Hierarchy</A>]</UL>
<UL>inadvertent sharing [in <A HREF="13-2.htm#idx367">13.2.2 Sharing Stream Buffers Inadvertently</A>]</UL>
<UL>overflow() function [in <A HREF="18-1.htm#idx442">18.1.1 The streambuf Hierarchy</A>]</UL>
<UL>problems of sharing [in <A HREF="13-2.htm#idx367">13.2.2 Sharing Stream Buffers Inadvertently</A>]</UL>
<UL>put area [in <A HREF="18-1.htm#idx441">18.1.1 The streambuf Hierarchy</A>]</UL>
<UL>seeking operations [in <A HREF="18-1.htm#idx443">18.1.1 The streambuf Hierarchy</A>]</UL>
<UL>setting locale [in <A HREF="13-3.htm#idx377">13.3.2 Several Locales for the Same Stream</A>]</UL>
<UL>sync operation [in <A HREF="18-1.htm#idx443">18.1.1 The streambuf Hierarchy</A>]</UL>
<UL>three kinds [in <A HREF="18-1.htm#idx437">18.1.1 The streambuf Hierarchy</A>]</UL>
<BR>stream class, deriving new
<UL>choosing a base class [in <A HREF="17-2.htm#idx415">17.2 Choosing a Base Class</A>]</UL>
<UL>choosing base class [in <A HREF="17-2.htm#idx415">17.2 Choosing a Base Class</A>]</UL>
<UL>date inserter [in <A HREF="17-4.htm#idx423">17.4.2  The Date Inserter</A>]</UL>
<UL>example code [in <A HREF="17-4.htm#idx422">17.4.1  The Derived Stream Class</A>]</UL>
<UL>from file stream or string stream [in <A HREF="17-3.htm#idx417">17.3.1  Derivation from File Stream or String Stream Classes Like (i/o)fstream<> or (i/o)stringstream<></A>]</UL>
<UL>from stream classes [in <A HREF="17-3.htm#idx418">17.3.1  Derivation from File Stream or String Stream Classes Like (i/o)fstream<> or (i/o)stringstream<></A>]</UL>
<UL>initializing the base class [in <A HREF="17-3.htm#idx416">17.3 Construction and Initialization</A>]</UL>
<UL>manipulator [in <A HREF="17-4.htm#idx426">17.4.3  The Manipulator</A>]</UL>
<UL>overview [in <A HREF="17-1.htm#idx413">17.1 Deriving a New Stream Type</A>]</UL>
<UL>performance issues [in <A HREF="17-4.htm#idx429">17.4.4  A Remark on Performance</A>]</UL>
<UL>providing stream buffer [in <A HREF="17-3.htm#idx420">17.3.2 Derivation from the Stream Classes basic_(i/o)stream<></A>]</UL>
<UL>using iword/pword [in <A HREF="17-5.htm#idx431">17.5 Using iword/pword for RTTI in Derived Streams</A>]</UL>
<BR>stream classes hierarchy [in <A HREF="6-4.htm#idx176">6.4.1 The Internal Structure of the Formatting Layer</A>]
<BR>stream classes
<UL>base class [in <A HREF="6-4.htm#idx180">6.4.1.1 Iostreams Base Class ios_base</A>]</UL>
<UL>basic_ios&lt;&gt; [in <A HREF="6-4.htm#idx182">6.4.1.2 The Iostreams Character Type-Dependent Base Class</A>]</UL>
<UL>character traits [in <A HREF="6-4.htm#idx185">6.4.1.3 Character Traits</A>]</UL>
<UL>file streams [in <A HREF="6-4.htm#idx194">6.4.1.5 The File Streams</A>]</UL>
<UL>formatting layer [in <A HREF="6-4.htm#idx176">6.4.1 The Internal Structure of the Formatting Layer</A>]</UL>
<UL>input and output streams [in <A HREF="6-4.htm#idx189">6.4.1.3 Character Traits</A>]</UL>
<UL>internal structure [in <A HREF="6-4.htm#idx176">6.4.1 The Internal Structure of the Formatting Layer</A>]</UL>
<UL>string streams [in <A HREF="6-4.htm#idx199">6.4.1.6 The String Streams</A>]</UL>
<UL>type-dependent base class [in <A HREF="6-4.htm#idx181">6.4.1.2 The Iostreams Character Type-Dependent Base Class</A>]</UL>
<UL>type-independent base class [in <A HREF="6-4.htm#idx180">6.4.1.1 Iostreams Base Class ios_base</A>]</UL>
<UL>virtual base class [in <A HREF="6-4.htm#idx181">6.4.1.2 The Iostreams Character Type-Dependent Base Class</A>]</UL>
<BR>stream errors
<UL>catching exceptions [in <A HREF="8-3.htm#idx261">8.3 Catching Exceptions</A>]</UL>
<UL>checking for errors [in <A HREF="8-2.htm#idx259">8.2 Checking the Stream State</A>]</UL>
<BR>stream iterators
<UL>defined [in <A HREF="22-1.htm#idx489">22.1  Definition</A>]</UL>
<UL>differ from container iterators [in <A HREF="22-2.htm#idx490">22.2 Differences between Stream Iterators and Container Iterators</A>]</UL>
<UL>error indication [in <A HREF="22-3.htm#idx491">22.3 Error Indication by Stream Iterators</A>]</UL>
<UL>several on one stream [in <A HREF="22-4.htm#idx492">22.4 Several Iterators on One Stream</A>]</UL>
<BR>stream objects
<UL>can't be copied or assigned to each other [in <A HREF="13-2.htm#idx362">13.2 Copying and Assigning Stream Objects</A>]</UL>
<UL>copying data causes shared buffer [in <A HREF="13-2.htm#idx365">13.2.1 Copying a Stream's Data Members</A>]</UL>
<UL>copying data means copying behavior [in <A HREF="13-2.htm#idx369">13.2.2 Sharing Stream Buffers Inadvertently</A>]</UL>
<UL>copying data members [in <A HREF="13-2.htm#idx363">13.2.1 Copying a Stream's Data Members</A>]</UL>
<UL>file descriptors for copying data [in <A HREF="13-2.htm#idx370">13.2.2 Sharing Stream Buffers Inadvertently</A>]</UL>
<UL>pointers instead of copies [in <A HREF="13-2.htm#idx371">13.2.3 Using Pointers or References to Streams</A>]</UL>
<UL>references and pointers better than copies [in <A HREF="13-2.htm#idx373">13.2.3 Using Pointers or References to Streams</A>]</UL>
<UL>references instead of copies [in <A HREF="13-2.htm#idx372">13.2.3 Using Pointers or References to Streams</A>]</UL>
<UL>restrictions on copying [in <A HREF="13-2.htm#idx361">13.2 Copying and Assigning Stream Objects</A>]</UL>
<UL>separate file buffer object for copying stream data [in <A HREF="13-2.htm#idx369">13.2.2 Sharing Stream Buffers Inadvertently</A>]</UL>
<BR>stream storage
<UL>adding data [in <A HREF="15-1.htm#idx400">15.1 Adding Data to a Stream</A>]</UL>
<UL>and date format string manipulator [in <A HREF="15-3.htm#idx408">15.3 Another Look at the Date Format String</A>]</UL>
<UL>array for private use [in <A HREF="15-2.htm#idx403">15.2 An Example - Storing a Date Format String </A>]</UL>
<UL>overview [in <A HREF="15-2.htm#idx402">15.2 An Example - Storing a Date Format String </A>]</UL>
<UL>standard and C library compared [in <A HREF="15-2.htm#idx401">15.2 An Example - Storing a Date Format String </A>]</UL>
<BR>stream type, deriving new [in <A HREF="17-1.htm#idx414">17.1 Deriving a New Stream Type</A>]
<BR>streambuf interface
<UL>for locales [in <A HREF="18-1.htm#idx449">18.1.2 The streambuf Interface</A>]</UL>
<UL>for positioning [in <A HREF="18-1.htm#idx448">18.1.2 The streambuf Interface</A>]</UL>
<UL>for reading [in <A HREF="18-1.htm#idx446">18.1.2 The streambuf Interface</A>]</UL>
<UL>for writing [in <A HREF="18-1.htm#idx447">18.1.2 The streambuf Interface</A>]</UL>
<BR>streambuf, deriving new
<UL>deriving from filebuf [in <A HREF="18-2.htm#idx450">18.2 Deriving New Stream Buffer Classes</A>]</UL>
<UL>implementing new log stream class [in <A HREF="18-2.htm#idx453">18.2 Deriving New Stream Buffer Classes</A>]</UL>
<UL>implementing overflow function [in <A HREF="18-2.htm#idx451">18.2 Deriving New Stream Buffer Classes</A>]</UL>
<UL>new logstream class [in <A HREF="18-2.htm#idx452">18.2 Deriving New Stream Buffer Classes</A>]</UL>
<UL>using new log buffer class [in <A HREF="18-2.htm#idx454">18.2 Deriving New Stream Buffer Classes</A>]</UL>
<BR>streambuf. See also <A HREF="#basic_streambuf">basic_streambuf</A>
 
<BR><A NAME="streambuf">streambuf</A>
<UL>class hierarchy [in <A HREF="18-1.htm#idx434">18.1.1 The streambuf Hierarchy</A>]</UL>
<UL>interface [in <A HREF="18-1.htm#idx444">18.1.1 The streambuf Hierarchy</A>]</UL>
<UL>overview [in <A HREF="18-1.htm#idx433">18.1 Class streambuf - the Sequence Abstraction</A>]</UL>
<BR>streams and stream buffers, collaboration [in <A HREF="6-4.htm#idx216">6.4.2.3 The String Stream Buffer</A>]
<BR>streams
<UL>error state of [in <A HREF="8-1.htm#idx252">8.1 About Flags</A>]</UL>
<UL>explicit synchronization of [in <A HREF="14-2.htm#idx390">14.2 Explicit Synchronization</A>]</UL>
<UL>forcing buffers to empty to files [in <A HREF="14-2.htm#idx390">14.2 Explicit Synchronization</A>]</UL>
<UL>sharing files [in <A HREF="14-1.htm#idx388">14.1 Sharing Files Among Streams</A>]</UL>
<BR>string input [in <A HREF="7-5.htm#idx251">7.5.2 Input of Strings</A>]
<BR>string streams
<UL>[in <A HREF="10-1.htm#idx296">10.1 About String Streams</A>]</UL>
<UL>[in <A HREF="6-4.htm#idx198">6.4.1.5 The File Streams</A>]</UL>
<UL>class templates [in <A HREF="10-1.htm#idx297">10.1 About String Streams</A>]</UL>
<UL>internal buffer [in <A HREF="10-2.htm#idx298">10.2 The Internal Buffer</A>]</UL>
<UL>open modes [in <A HREF="10-3.htm#idx299">10.3 The Open Modes</A>]</UL>
<BR>strstream
<UL>deprecated [in <A HREF="24-4.htm#idx506">24.4 String Streams</A>]</UL>
<UL><UL>[in <A HREF="25-3.htm#idx513">25.3 Deprecated Features</A>]</UL></UL>
<UL><UL>[in <A HREF="6-4.htm#idx178">6.4.1 The Internal Structure of the Formatting Layer</A>]</UL></UL>
<UL><UL>[in <A HREF="A-1.htm#idx514">A.1 Implementation-Dependent Behavior</A>]</UL></UL>
<BR>strstreambuf
<UL>[in <A HREF="18-1.htm#idx440">18.1.1 The streambuf Hierarchy</A>]</UL>
<UL>deprecated [in <A HREF="24-4.htm#idx506">24.4 String Streams</A>]</UL>
<BR>sync()
<UL>[in <A HREF="14-2.htm#idx392">14.2.2  Input Streams</A>]</UL>
<UL>when to use [in <A HREF="14-2.htm#idx393">14.2.2  Input Streams</A>]</UL>
<BR>synchronization
<UL>automatic [in <A HREF="14-3.htm#idx394">14.3 Implicit Synchronization Using the unitbuf Format Flag</A>]</UL>
<UL><UL>[in <A HREF="14-4.htm#idx396">14.4 Implicit Synchronization by Tying Streams</A>]</UL></UL>
<UL>explicit [in <A HREF="14-2.htm#idx390">14.2 Explicit Synchronization</A>]</UL>
<UL>implicit [in <A HREF="14-3.htm#idx394">14.3 Implicit Synchronization Using the unitbuf Format Flag</A>]</UL>
<UL><UL>[in <A HREF="14-4.htm#idx396">14.4 Implicit Synchronization by Tying Streams</A>]</UL></UL>
<UL>switching off [in <A HREF="14-6.htm#idx399">14.6 Synchronization with the C Standard I/O</A>]</UL>
<UL>with C Standard I/O [in <A HREF="14-6.htm#idx398">14.6 Synchronization with the C Standard I/O</A>]</UL>
<UL>with predefined streams [in <A HREF="14-5.htm#idx397">14.5 Synchronizing the Predefined Standard Streams</A>]</UL>
</DL>
<A NAME="t"><H3>t</H3></A>
<DL><BR>table
<UL>C locale categories [in <A HREF="3-1.htm#idx43">3.1 The C Locale</A>]</UL>
<UL>default open modes [in <A HREF="9-3.htm#idx287">9.3.3 Default Open Modes</A>]</UL>
<UL>documentation sources [in <A HREF="1-3.htm#idx4">1.3 Documentation Overview</A>]</UL>
<UL>flag names and effects [in <A HREF="9-3.htm#idx276">9.3.1 The Open Mode Flags</A>]</UL>
<UL>flags and corresponding error categories [in <A HREF="8-1.htm#idx253">8.1 About Flags</A>]</UL>
<UL>flags and their effects on operators [in <A HREF="7-3.htm#idx234">7.3.1.2 Parameters That Can Have Only a Few Different Values</A>]</UL>
<UL>format parameters with arbitrary values [in <A HREF="7-3.htm#idx231">7.3.1.1 Parameters That Can Have an Arbitrary Value</A>]</UL>
<UL>manipulators [in <A HREF="7-3.htm#idx244">7.3.2 Manipulators</A>]</UL>
<UL>open modes and C stdio counterparts [in <A HREF="9-3.htm#idx285">9.3.2 Combining Open Modes</A>]</UL>
<UL>possible seeks for seekp [in <A HREF="9-5.htm#idx292">9.5 File Positioning</A>]</UL>
<UL>predefined standard streams and C standard files [in <A HREF="7-1.htm#idx221">7.1 The Predefined Streams</A>]</UL>
<UL>stream member functions for error checking [in <A HREF="8-2.htm#idx260">8.2 Checking the Stream State</A>]</UL>
<BR>tellp [in <A HREF="9-5.htm#idx291">9.5 File Positioning</A>]
<BR>text I/O
<UL>defined [in <A HREF="6-2.htm#idx155">6.2 How Do the Standard Iostreams Work?</A>]</UL>
<BR>text mode [in <A HREF="9-4.htm#idx289">9.4 Binary and Text Mode</A>]
<BR>text processing [in <A HREF="6-2.htm#idx155">6.2 How Do the Standard Iostreams Work?</A>]
<BR>time classes [in <A HREF="3-2.htm#idx54">3.2.1.1 The Standard Facets</A>]
<BR>time_get [in <A HREF="11-4.htm#idx306">11.4 Improved Extractors and Inserters</A>]
<BR>time_get&lt;charT,InputIterator&gt; [in <A HREF="3-2.htm#idx54">3.2.1.1 The Standard Facets</A>]
<BR>time_put [in <A HREF="11-4.htm#idx309">11.4 Improved Extractors and Inserters</A>]
<BR>time_put&lt;charT,OutputIterator&gt; [in <A HREF="3-2.htm#idx54">3.2.1.1 The Standard Facets</A>]
<BR>traditional iostreams
<UL>defined [in <A HREF="6-1.htm#idx147">6.1 What Are the Standard Iostreams?</A>]</UL>
<BR>transport layer
<UL>defined [in <A HREF="6-2.htm#idx163">6.2.1.2 The Transport Layer</A>]</UL>
<UL>internal structure [in <A HREF="6-4.htm#idx204">6.4.1.6 The String Streams</A>]</UL>
<UL>stream buffer classes [in <A HREF="6-4.htm#idx205">6.4.2 The Transport Layer's Internal Structure</A>]</UL>
<BR>trunc [in <A HREF="9-3.htm#idx282">9.3.1.2 The Open modes ate, app, and trunc</A>]
<BR>type safety [in <A HREF="6-1.htm#idx149">6.1 What Are the Standard Iostreams?</A>]
</DL>
<A NAME="u"><H3>u</H3></A>
<DL><BR>underflow() [in <A HREF="6-4.htm#idx209">6.4.2.1 The Stream Buffer</A>]
<BR>unitbuf flag
<UL>[in <A HREF="14-3.htm#idx394">14.3 Implicit Synchronization Using the unitbuf Format Flag</A>]</UL>
<UL>switching off [in <A HREF="14-3.htm#idx395">14.3 Implicit Synchronization Using the unitbuf Format Flag</A>]</UL>
<BR>user-defined types example
<UL>date class for [in <A HREF="11-2.htm#idx301">11.2 An Example with a User-Defined Type</A>]</UL>
<UL>extractor pattern [in <A HREF="11-6.htm#idx316">11.6 Patterns for Extractors and Inserters of User-Defined Types</A>]</UL>
<UL>improved extractor [in <A HREF="11-5.htm#idx313">11.5.1 Applying the Recommendations to the Example</A>]</UL>
<UL>improved inserter [in <A HREF="11-5.htm#idx314">11.5.1 Applying the Recommendations to the Example</A>]</UL>
<UL>improving inserters and extractors [in <A HREF="11-5.htm#idx311">11.5 More Improved Extractors and Inserters</A>]</UL>
<UL>improving the extractors and inserters [in <A HREF="11-4.htm#idx305">11.4 Improved Extractors and Inserters</A>]</UL>
<UL>inserters and extractors for [in <A HREF="11-3.htm#idx302">11.3 A Simple Extractor and Inserter for the Example</A>]</UL>
<UL>more complete date class [in <A HREF="11-3.htm#idx303">11.3 A Simple Extractor and Inserter for the Example</A>]</UL>
<UL>pattern for the inserter [in <A HREF="11-6.htm#idx317">11.6 Patterns for Extractors and Inserters of User-Defined Types</A>]</UL>
<BR>user-defined types
<UL>[in <A HREF="6-1.htm#idx152">6.1.2 Extensibility to New Types</A>]</UL>
<UL>available in standard iostreams [in <A HREF="20-1.htm#idx478">20.1 User-Defined Character Types</A>]</UL>
<UL>character classification facet [in <A HREF="20-2.htm#idx484">20.2 Defining Traits and Facets for User-Defined Types</A>]</UL>
<UL>code conversion facets [in <A HREF="20-2.htm#idx483">20.2 Defining Traits and Facets for User-Defined Types</A>]</UL>
<UL>defining traits class and facets [in <A HREF="20-2.htm#idx481">20.2 Defining Traits and Facets for User-Defined Types</A>]</UL>
<UL>example [in <A HREF="20-1.htm#idx480">20.1.1 Requirements for User-Defined Character Types</A>]</UL>
<UL>requirements [in <A HREF="20-1.htm#idx479">20.1.1 Requirements for User-Defined Character Types</A>]</UL>
<UL>traits class declaration [in <A HREF="20-2.htm#idx482">20.2 Defining Traits and Facets for User-Defined Types</A>]</UL>
<UL>using streams instantiated on [in <A HREF="20-3.htm#idx485">20.3 Creating and Using Streams Instantiated on User-Defined Types</A>]</UL>
<BR>use_facet and has_facet
<UL>type required for [in <A HREF="4-3.htm#idx107">4.3 Accessing a Locale's Facets</A>]</UL>
<BR>use_facet [in <A HREF="4-3.htm#idx105">4.3 Accessing a Locale's Facets</A>]
</DL>
<A NAME="w"><H3>w</H3></A>
<DL><BR>wide characters
<UL>[in <A HREF="2-3.htm#idx36">2.3.2  Wide Characters</A>]</UL>
<UL>converting to multibyte [in <A HREF="2-3.htm#idx37">2.3.2  Wide Characters</A>]</UL>
</DL>
<A NAME="x"><H3>x</H3></A>
<DL><BR>X/Open consortium [in <A HREF="3-1.htm#idx41">3.1 The C Locale</A>]
<BR>X/Open messages [in <A HREF="3-2.htm#idx60">3.2.1.1 The Standard Facets</A>]
<BR>xalloc() [in <A HREF="15-2.htm#idx405">15.2 An Example - Storing a Date Format String </A>]
<BR>XPG4 [in <A HREF="3-1.htm#idx41">3.1 The C Locale</A>]
</DL>
<A NAME=""><H3></H3></A>
<DL></DL>
<P><A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of Document" BORDER=O></A><A HREF="booktoc.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=O></A></P>
<P>OEM Edition, &copy;Copyright 1999, Rogue Wave Software, Inc.<BR><A HREF="contact.htm">Contact</A> Rogue Wave about documentation or support issues.</P>
</BODY>
</HTML>