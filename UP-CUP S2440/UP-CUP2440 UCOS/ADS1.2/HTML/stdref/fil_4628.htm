<HTML><HEAD><TITLE>fill, fill_n</TITLE></HEAD><BODY BGCOLOR=#FFFFFF>
<IMG SRC="images/banner.gif" WIDTH=405 HEIGHT=57 ALT="Rogue Wave banner" BORDER=0><BR>
<A HREF="fac_8558.htm"><IMG SRC="images/prev.gif" WIDTH=20 HEIGHT=21 ALT="Previous file" BORDER=0></A><A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of document" BORDER=0></A><A HREF="classref.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=0></A><A HREF="tindex.htm"><IMG SRC="images/index.gif" WIDTH=56 HEIGHT=21 ALT="Index" BORDER=0></A><A HREF="fin_7988.htm"><IMG SRC="images/next.gif" WIDTH=19 HEIGHT=21 ALT="Next file" BORDER=0></A><BR>

<H2>fill, fill_n</H2>
<PRE><HR>Algorithm
<HR></PRE>
<UL>
<LI><A HREF="#Summary">Summary</A></LI>
<LI><A HREF="#memindex">Data Type and Member Function Indexes</A></LI>
<LI><A HREF="#Synopsis">Synopsis</A></LI>
<LI><A HREF="#Description">Description</A></LI>
<LI><A HREF="#Complexity">Complexity</A></LI>
<LI><A HREF="#Example">Example</A></LI>
<LI><A HREF="#Warnings">Warnings</A></LI>

</UL>
<A NAME="Summary"><H3>Summary</H3></A>
<P>Initializes a range with a given value.</P>
<A NAME="memindex"><H3>Data Type and Member Function Indexes<BR>(exclusive of constructors and destructors)</H3></A>
<P>None</P>

<A NAME="Synopsis"><H3>Synopsis</H3></A>
<PRE>
<PRE>#include &lt;algorithm&gt;
template &lt;class ForwardIterator, class T&gt;
  void <B>fill</B>(ForwardIterator first, ForwardIterator last,
            const T&amp; value);

template &lt;class OutputIterator, class Size, class T&gt;
  void <B>fill_n</B>(OutputIterator first, Size n, const T&amp; value);</PRE>

</PRE>

<A NAME="Description"><H3>Description</H3></A>
<P>The <B><I>fill</I></B> and <B><I>fill_n</I></B> algorithms are used to assign a value to the elements in a sequence. <B><I>fill</I></B> assigns the value to all the elements designated by iterators in the range <SAMP>[first, last)</SAMP>.</P>
<P>The <B><I>fill_n</I></B> algorithm assigns the value to all the elements designated by iterators in the range <SAMP>[first, first + n)</SAMP>. <B><I>fill_n</I></B> assumes that there are at least <SAMP>n</SAMP> elements following <SAMP>first</SAMP>, unless <SAMP>first</SAMP> is an insert iterator.</P>
<P>Type <SAMP>T</SAMP> must be Assignable, and <SAMP>Size</SAMP> must be convertible to an integral type.</P>

<A NAME="Complexity"><H3>Complexity</H3></A>
<P><B><I>fill</I></B> makes exactly <SAMP>last - first</SAMP> assignments, and <B><I>fill_n</I></B> makes exactly <SAMP>n</SAMP> assignments.</P>

<A NAME="Example"><H3>Example</H3></A>
<UL>
<PRE>//
// fill.cpp
//
 #include &lt;algorithm&gt;
 #include &lt;vector&gt;
 #include &lt;iostream&gt;
 using namespace std;

 int main()
 {
   int d1[4] = {1,2,3,4};
   //
   // Set up two vectors
   //
   vector&lt;int&gt; v1(d1,d1 + 4), v2(d1,d1 + 4);
   //
   // Set up one empty vector
   //
   vector&lt;int&gt; v3;
   //
   // Fill all of v1 with 9
   //
   <B>fill</B>(v1.begin(),v1.end(),9);


   //
   // Fill first 3 of v2 with 7
   //
   <B>fill_n</B>(v2.begin(),3,7);

   //
   // Use insert iterator to fill v3 with 5 11's
   //
   <B>fill_n</B>(back_inserter(v3),5,11);
   //
   // Copy all three to cout
   //
   ostream_iterator&lt;int,char&gt; out(cout," ");
   copy(v1.begin(),v1.end(),out);
   cout &lt;&lt; endl;
   copy(v2.begin(),v2.end(),out);
   cout &lt;&lt; endl;
   copy(v3.begin(),v3.end(),out);
   cout &lt;&lt; endl;
   //
   // Fill cout with 3 5's
   //
   <B>fill_n</B>(ostream_iterator&lt;int,char&gt;(cout," "),3,5);
   cout &lt;&lt; endl;

   return 0;
 }</PRE>

</UL>
<P><B>Program Output</B></P>
<UL>
<PRE>
9 9 9 9
7 7 7 4
11 11 11 11 11
5 5 5</PRE>

</UL>

<A NAME="Warnings"><H3>Warnings</H3></A>
<P>If your compiler does not support default template parameters, then you always need to supply the <SAMP>Allocator</SAMP> template argument. For instance, you have to write:</P>
<P><SAMP>vector&lt;int,allocator&lt;int&gt; &gt;</SAMP></P>
<P>instead of:</P>
<P><SAMP>vector&lt;int&gt;</SAMP></P>
<P>If your compiler does not support namespaces, then you do not need the using declaration for <SAMP>std</SAMP>.</P>


<BR>
<HR>
<A HREF="fac_8558.htm"><IMG SRC="images/prev.gif" WIDTH=20 HEIGHT=21 ALT="Previous file" BORDER=0></A><A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of document" BORDER=0></A><A HREF="classref.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=0></A><A HREF="tindex.htm"><IMG SRC="images/index.gif" WIDTH=56 HEIGHT=21 ALT="Index" BORDER=0></A><A HREF="fin_7988.htm"><IMG SRC="images/next.gif" WIDTH=19 HEIGHT=21 ALT="Next file" BORDER=0></A>
<BR>&copy;Copyright 1999, Rogue Wave Software, Inc.<BR>Send <A HREF="mailto:onlinedocs@roguewave.com">mail</A> to report errors or comment on the documentation.
<BR>
OEM Release</BODY></HTML>
