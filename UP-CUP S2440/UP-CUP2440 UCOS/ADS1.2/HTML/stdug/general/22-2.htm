<HTML><HEAD><TITLE>22.2 Declaring a valarray</TITLE></HEAD>
<BODY BGCOLOR=#FFFFFF>
<A HREF="../index.htm"><IMG SRC="images/banner.gif" WIDTH=405 HEIGHT=57 ALT="Rogue Wave banner" BORDER=0></A><BR>
<A HREF="22-1.htm"><IMG SRC="images/prev.gif" WIDTH=20 HEIGHT=21 ALT="Previous file" BORDER=0></A><A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of Document" BORDER=O></A><A HREF="booktoc.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=0></A><A HREF="tindex.htm"><IMG SRC="images/index.gif" WIDTH=56 HEIGHT=21 ALT="Index" BORDER=0></A><A HREF="22-3.htm"><IMG SRC="images/next.gif" WIDTH=19 HEIGHT=21 ALT="Next file" BORDER=0></A>
<H2>22.2 Declaring a valarray</H2>
<A NAME="idx444"><!></A>
<P>A <B><I><A HREF="../../stdref/val_6244.htm">valarray</A></I></B> can be constructed by any of the following means:</P>
<UL>
<LI><P><B>Default constructor</B>. The default constructor is provided to allow arrays of <B><I><A HREF="../../stdref/val_6244.htm">valarray</A></I></B>s. Use the resize function to adjust the <B><I>valarray</I></B> after construction.</P>
</LI>
<LI><P><B>Construction and initialization.</B> A <B><I><A HREF="../../stdref/val_6244.htm">valarray</A></I></B> provides two ways to start with a given size and values: </P>
</LI>
<UL>
<LI><P><SAMP>valarray(const T&amp; v,size_t n)</SAMP> constructs a <B><I><A HREF="../../stdref/val_6244.htm">valarray</A></I></B> of size <SAMP>n</SAMP> with each element initialized to the value <SAMP>v</SAMP>. </P>
</LI>
<LI><P><SAMP>valarray(const T* p,size_t n)</SAMP> constructs a <B><I><A HREF="../../stdref/val_6244.htm">valarray</A></I></B> of size <SAMP>n</SAMP> with each element initialized to the corresponding element of the array pointed to by <SAMP>p</SAMP>. This constructor allows a program to transfer data with maximum efficiency from an ordinary `C' array (resulting from a file operation, for example) into a <B><I>valarray</I></B>.</P>
</LI>
</UL>
<LI><P><B>Copy constructor</B>. The copy constructor has value semantics.</P>
</LI>
<LI><P><B>Conversion constructors</B>. Class <B><I><A HREF="../../stdref/val_6244.htm">valarray</A></I></B> provides four conversion constructors for converting from auxiliary classes generated by subscript operations. We'll look at these classes in detail and describe the use of the conversion constructors in <A HREF="22-4.htm#2242">Section 22.4.2</A>.</P>
</LI>
</UL>
<P>The following example shows the use of the first three categories of constructors:</P>
<UL>
<PRE>
#include &lt;valarray&gt;

using std::valarray;

valarray&lt;int&gt; v1;        // construct an empty valarray
valarray&lt;int&gt; v2(1,3);   // construct a valarray of three
                         // elements, all initialized to 1
v1.resize(3,2);          // resize the first valarray to
                         // three elements, all initialized to 2
valarray&lt;int&gt; v3(v1);    // v3 gets a copy of v1's elements.
                        </PRE>
</UL>

<HR>
<A HREF="22-1.htm"><IMG SRC="images/prev.gif" WIDTH=20 HEIGHT=21 ALT="Previous file" BORDER=0></A><A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of Document" BORDER=O></A><A HREF="booktoc.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=0></A><A HREF="tindex.htm"><IMG SRC="images/index.gif" WIDTH=56 HEIGHT=21 ALT="Index" BORDER=0></A><A HREF="22-3.htm"><IMG SRC="images/next.gif" WIDTH=19 HEIGHT=21 ALT="Next file" BORDER=0></A><P>OEM Edition, &copy;Copyright 1999, Rogue Wave Software, Inc.<BR><A HREF="contact.htm">Contact</A> Rogue Wave about documentation or support issues.</P>
</BODY></HTML>
