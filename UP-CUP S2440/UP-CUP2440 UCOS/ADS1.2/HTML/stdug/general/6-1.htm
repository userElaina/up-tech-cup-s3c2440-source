<HTML><HEAD><TITLE>6.1 The list Data Abstraction</TITLE></HEAD>
<BODY BGCOLOR=#FFFFFF>
<A HREF="../index.htm"><IMG SRC="images/banner.gif" WIDTH=405 HEIGHT=57 ALT="Rogue Wave banner" BORDER=0></A><BR>
<A HREF="6.htm"><IMG SRC="images/prev.gif" WIDTH=20 HEIGHT=21 ALT="Previous file" BORDER=0></A><A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of Document" BORDER=O></A><A HREF="booktoc.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=0></A><A HREF="tindex.htm"><IMG SRC="images/index.gif" WIDTH=56 HEIGHT=21 ALT="Index" BORDER=0></A><A HREF="6-2.htm"><IMG SRC="images/next.gif" WIDTH=19 HEIGHT=21 ALT="Next file" BORDER=0></A>
<H2>6.1 The list Data Abstraction</H2>
<A NAME="idx95"><!></A>
<P>The <B><I><A HREF="../../stdref/vec_0251.htm">vector</A></I></B> data structure is a container of relatively fixed size. While the Standard C++ Library provides facilities for dynamically changing the size of a vector, such operations are costly and should be used only rarely. Yet in many problems, the size of a collection may be difficult to predict in advance, or may vary widely during the course of execution. For cases that suggest an alternative data structure, we examine the <B><I><A HREF="../../stdref/lis_3222.htm">list</A></I></B> datatype in this chapter. </P>
<A NAME="idx96"><!></A>
<P>A <B><I><A HREF="../../stdref/lis_3222.htm">list</A></I></B> corresponds to the intuitive idea of holding elements in a linear sequence that is not necessarily ordered. New values can be added to or removed from either the front or the back of the <B><I>list</I></B>. By using an iterator to denote a position, elements can also be added to or removed from the middle of a <B><I>list</I></B>. In all cases the insertion or removal operations are efficient; they are performed in a constant amount of time that is independent of the number of elements being maintained in the collection. </P>
<P>A <B><I><A HREF="../../stdref/lis_3222.htm">list</A></I></B> is a linear structure. In general, elements of a <B><I>list</I></B> can only be accessed by a linear traversal of all values, not by subscript. </P>

<A NAME="611"><H3>6.1.1 Include files</H3></A>
<A NAME="idx97"><!></A>
<P>Whenever you use a <B><I><A HREF="../../stdref/lis_3222.htm">list</A></I></B>, you must include the <SAMP>list</SAMP> header file:</P>
<UL>
<PRE>
# include &lt;list&gt;</PRE>
</UL>

<HR>
<A HREF="6.htm"><IMG SRC="images/prev.gif" WIDTH=20 HEIGHT=21 ALT="Previous file" BORDER=0></A><A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of Document" BORDER=O></A><A HREF="booktoc.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=0></A><A HREF="tindex.htm"><IMG SRC="images/index.gif" WIDTH=56 HEIGHT=21 ALT="Index" BORDER=0></A><A HREF="6-2.htm"><IMG SRC="images/next.gif" WIDTH=19 HEIGHT=21 ALT="Next file" BORDER=0></A><P>OEM Edition, &copy;Copyright 1999, Rogue Wave Software, Inc.<BR><A HREF="contact.htm">Contact</A> Rogue Wave about documentation or support issues.</P>
</BODY></HTML>
