<HTML><HEAD><TITLE>Random Access Iterators</TITLE></HEAD><BODY BGCOLOR=#FFFFFF>
<IMG SRC="images/banner.gif" WIDTH=405 HEIGHT=57 ALT="Rogue Wave banner" BORDER=0><BR>
<A HREF="que_0953.htm"><IMG SRC="images/prev.gif" WIDTH=20 HEIGHT=21 ALT="Previous file" BORDER=0></A><A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of document" BORDER=0></A><A HREF="classref.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=0></A><A HREF="tindex.htm"><IMG SRC="images/index.gif" WIDTH=56 HEIGHT=21 ALT="Index" BORDER=0></A><A HREF="ran_2368.htm"><IMG SRC="images/next.gif" WIDTH=19 HEIGHT=21 ALT="Next file" BORDER=0></A><BR>

<H2>Random Access Iterators</H2>
<PRE><HR>Iterator
<HR></PRE>
<UL>
<LI><A HREF="#Summary">Summary</A></LI>
<LI><A HREF="#memindex">Data Type and Member Function Indexes</A></LI>
<LI><A HREF="#Description">Description</A></LI>
<LI><A HREF="#Key to Iterator Requirements">Key to Iterator Requirements</A></LI>
<LI><A HREF="#Requirements for Random Access Iterators">Requirements for Random Access Iterators</A></LI>
<LI><A HREF="#See Also">See Also</A></LI>

</UL>
<A NAME="Summary"><H3>Summary</H3></A>
<P>An iterator that reads, writes, and allows random access to a container.</P>
<A NAME="memindex"><H3>Data Type and Member Function Indexes<BR>(exclusive of constructors and destructors)</H3></A>
<P>None</P>

<A NAME="Description"><H3>Description</H3></A>
<BLOCKQUOTE><HR>
<B>NOTE:For a complete discussion of iterators, see the <B><I><A HREF="Ite_5295.htm">Iterators</A></I></B> section of this reference.
</B><HR></BLOCKQUOTE>
<P>Iterators are a generalization of pointers that allow a C++ program to uniformly interact with different data structures. Random access iterators can read, write, and allow random access to the containers they serve. These iterators satisfy the requirements listed below.</P>

<A NAME="Key to Iterator Requirements"><H3>Key to Iterator Requirements</H3></A>
<P>The following key pertains to the iterator requirements listed below: </P>
<TABLE>
<TR><TD VALIGN=top><SAMP>a and b  </TD>
<TD></SAMP>values of type <SAMP>X</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>n  </TD>
<TD></SAMP>value of <SAMP>distance</SAMP> type</TD></TR>
<TR><TD VALIGN=top><SAMP>u, Distance, tmp and m  </TD>
<TD></SAMP>identifiers</TD></TR>
<TR><TD VALIGN=top><SAMP>r  </TD>
<TD></SAMP>value of type <SAMP>X&amp;</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>t  </TD>
<TD></SAMP>value of type <SAMP>T</SAMP></TD></TR>
</TABLE>

<A NAME="Requirements for Random Access Iterators"><H3>Requirements for Random Access Iterators</H3></A>
<P>The following expressions must be valid for random access iterators:</P>
<TABLE>
<TR><TD VALIGN=top><SAMP>X u  </TD>
<TD>u</SAMP> might have a singular value</TD></TR>
<TR><TD VALIGN=top><SAMP>X()  </TD>
<TD>X()</SAMP> might be singular</TD></TR>
<TR><TD VALIGN=top><SAMP>X(a)  </TD>
<TD></SAMP>copy constructor, <SAMP>a == X(a)</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>X u(a)  </TD>
<TD></SAMP>copy constructor, <SAMP>u == a</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>X u = a  </TD>
<TD></SAMP>assignment, <SAMP>u == a</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>a == b, a != b  </TD>
<TD></SAMP>return value convertible to <SAMP>bool</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>r = a  </TD>
<TD></SAMP>assignment, <SAMP>r == a</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>*a  </TD>
<TD></SAMP>return value convertible to <SAMP>T&amp;</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>a-&gt;m  </TD>
<TD></SAMP>equivalent to <SAMP>(*a).m</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>++r  </TD>
<TD></SAMP>returns <SAMP>X&amp;</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>r++  </TD>
<TD></SAMP>return value convertible to const <SAMP>X&amp;</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>*r++  </TD>
<TD></SAMP>returns <SAMP>T&amp;</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>--r  </TD>
<TD></SAMP>returns <SAMP>X&amp;</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>r--  </TD>
<TD></SAMP>return value convertible to const <SAMP>X&amp;</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>*r--  </TD>
<TD></SAMP>returns <SAMP>T&amp;</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>r += n  </TD>
<TD></SAMP>Semantics of <SAMP>--r</SAMP> or <SAMP>++r n</SAMP> times depending on the sign of <SAMP>n</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>a + n, n + a  </TD>
<TD></SAMP>returns type <SAMP>X</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>r -= n  </TD>
<TD></SAMP>returns <SAMP>X&amp;</SAMP>, behaves as <SAMP>r += -n</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>a - n  </TD>
<TD></SAMP>returns type <SAMP>X</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>b - a  </TD>
<TD></SAMP>returns <SAMP>distance</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>a[n]  </TD>
<TD>*(a+n)</SAMP>, return value convertible to <SAMP>T</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>a &lt; b  </TD>
<TD></SAMP>total ordering relation</TD></TR>
<TR><TD VALIGN=top><SAMP>a &gt; b  </TD>
<TD></SAMP>total ordering relation opposite to <SAMP>&lt;</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>a &lt;= b  </TD>
<TD>!(a &lt; b)</SAMP></TD></TR>
<TR><TD VALIGN=top><SAMP>a &gt;= b  </TD>
<TD>!(a &gt; b)</SAMP></TD></TR>
</TABLE>
<P>Like forward iterators, random access iterators have the condition that <SAMP>a == b</SAMP> implies <SAMP>*a == *b</SAMP>.</P>
<P>There are no restrictions on the number of passes an algorithm may make through the structure.</P>
<P>All relational operators return a value convertible to <SAMP>bool</SAMP>.</P>

<A NAME="See Also"><H3>See Also</H3></A>
<P><B><I><A HREF="Ite_5295.htm">Iterators</A></I></B>, <B><I><A HREF="For_3289.htm">Forward Iterators</A></I></B>, <B><I><A HREF="Bid_8932.htm">Bidirectional Iterators</A></I></B></P>


<BR>
<HR>
<A HREF="que_0953.htm"><IMG SRC="images/prev.gif" WIDTH=20 HEIGHT=21 ALT="Previous file" BORDER=0></A><A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of document" BORDER=0></A><A HREF="classref.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=0></A><A HREF="tindex.htm"><IMG SRC="images/index.gif" WIDTH=56 HEIGHT=21 ALT="Index" BORDER=0></A><A HREF="ran_2368.htm"><IMG SRC="images/next.gif" WIDTH=19 HEIGHT=21 ALT="Next file" BORDER=0></A>
<BR>&copy;Copyright 1999, Rogue Wave Software, Inc.<BR>Send <A HREF="mailto:onlinedocs@roguewave.com">mail</A> to report errors or comment on the documentation.
<BR>
OEM Release</BODY></HTML>
