<HTML><HEAD><TITLE>11.6 Patterns for Extractors and Inserters of User-Defined Types</TITLE></HEAD>
<BODY BGCOLOR=#FFFFFF>
<A HREF="../index.htm"><IMG SRC="images/banner.gif" WIDTH=405 HEIGHT=57 ALT="Rogue Wave banner" BORDER=0></A><BR>
<A HREF="11-5.htm"><IMG SRC="images/prev.gif" WIDTH=20 HEIGHT=21 ALT="Previous file" BORDER=0></A><A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of Document" BORDER=O></A><A HREF="booktoc.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=0></A><A HREF="tindex.htm"><IMG SRC="images/index.gif" WIDTH=56 HEIGHT=21 ALT="Index" BORDER=0></A><A HREF="12.htm"><IMG SRC="images/next.gif" WIDTH=19 HEIGHT=21 ALT="Next file" BORDER=0></A>
<H2>11.6 Patterns for Extractors and Inserters of User-Defined Types</H2>
<A NAME="idx316"><!></A>
<P>Here is the pattern for an extractor:</P>
<UL>
<PRE>
template&lt;class charT, class Traits&gt;
basic_istream&lt;charT, Traits&gt;&amp; operator &gt;&gt; 
  (basic_istream&lt;charT, Traits &gt;&amp; is, UserDefinedType&amp; x)
{
 ios_base::iostate err = 0;
 
 try {
 
  typename basic_istream&lt;charT, Traits&gt;::sentry ipfx(is);
 
  if(ipfx)
  {
   // Do whatever has to be done!
   // Typically you access the stream's locale or buffer.
   // Don't call stream member functions here in MT environments!

   // Add state bits to the err variable if necessary, for example,
   // if (...) err |= ios_base::failbit;
  }
 } // try
 catch(...)                                                   //1
 {
    bool flag = FALSE;
    try { is.setstate(ios_base::failbit); }                   //2
    catch( ios_base::failure ) { flag= TRUE; }                //3
    if ( flag ) throw;                                        //4
 }
 
 if ( err ) is.setstate(err);                                 //5
 
 return is;
}</PRE>
</UL>
<A NAME="idx317"><!></A>
<P>Similarly, the pattern for the inserter looks like this:</P>
<UL>
<PRE>
template&lt;class charT, class Traits&gt;
basic_ostream&lt;charT, Traits&gt;&amp; operator &lt;&lt; 
 (basic_ostream&lt;charT, Traits &gt;&amp; os, const UserDefinedType&amp; x)
{
 ios_base::iostate err = 0;
 
 try {
  typename basic_ostream&lt;charT, Traits&gt;::sentry opfx(os);
 
  if(opfx)
  {
   // Do whatever has to be done!
   // Typically you access the stream's locale or buffer.
   // Don't call stream member functions here in MT environments!

   // Add state bits to the err variable if necessary, for example,
   // if (...) err |= ios_base::failbit;

   // Reset the field width after usage, that is,
   // os.width(0);
  }
 } //try
 catch(...)
 {
    bool flag = FALSE;
    try { os.setstate(ios_base::failbit); }
    catch( ios_base::failure ) { flag= TRUE; }
    if ( flag ) throw;
 }
 
 if ( err ) os.setstate(err);
 
 return os;
}</PRE>
</UL>


<BR>
<HR>
<A HREF="11-5.htm"><IMG SRC="images/prev.gif" WIDTH=20 HEIGHT=21 ALT="Previous file" BORDER=0></A><A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of Document" BORDER=O></A><A HREF="booktoc.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=0></A><A HREF="tindex.htm"><IMG SRC="images/index.gif" WIDTH=56 HEIGHT=21 ALT="Index" BORDER=0></A><A HREF="12.htm"><IMG SRC="images/next.gif" WIDTH=19 HEIGHT=21 ALT="Next file" BORDER=0></A><P>OEM Edition, OEM Edition, &copy;Copyright 1999, Rogue Wave Software, Inc.<BR><A HREF="contact.htm">Contact</A> Rogue Wave about documentation or support issues.</P>
</BODY></HTML>
