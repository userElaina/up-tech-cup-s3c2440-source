<HTML><HEAD><TITLE>ctype_byname</TITLE></HEAD><BODY BGCOLOR=#FFFFFF>
<IMG SRC="images/banner.gif" WIDTH=405 HEIGHT=57 ALT="Rogue Wave banner" BORDER=0><BR>
<A HREF="cty_2787.htm"><IMG SRC="images/prev.gif" WIDTH=20 HEIGHT=21 ALT="Previous file" BORDER=0></A><A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of document" BORDER=0></A><A HREF="classref.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=0></A><A HREF="tindex.htm"><IMG SRC="images/index.gif" WIDTH=56 HEIGHT=21 ALT="Index" BORDER=0></A><A HREF="deq_4164.htm"><IMG SRC="images/next.gif" WIDTH=19 HEIGHT=21 ALT="Next file" BORDER=0></A><BR>

<H2>ctype_byname</H2>
<PRE><HR>                          <IMG SRC="images/inherits.gif" WIDTH=69 HEIGHT=11> ctype_base
ctype_byname<IMG SRC="images/inherits.gif" WIDTH=69 HEIGHT=11>ctype
                          <IMG SRC="images/inherits.gif" WIDTH=69 HEIGHT=11>locale::facet
<HR></PRE>
<UL>
<LI><A HREF="#Summary">Summary</A></LI>
<LI><A HREF="#memindex">Data Type and Member Function Indexes</A></LI>
<LI><A HREF="#Synopsis">Synopsis</A></LI>
<LI><A HREF="#Description">Description</A></LI>
<LI><A HREF="#Interface">Interface</A></LI>
<LI><A HREF="#Constructors">Constructors</A></LI>
<LI><A HREF="#See Also">See Also</A></LI>

</UL>
<A NAME="Summary"><H3>Summary</H3></A>
<P>A facet that includes character classification facilities based on the named locales.</P>
<A NAME="memindex"><H3>Data Type and Member Function Indexes<BR>(exclusive of constructors and destructors)</H3></A>
<P>None</P>

<A NAME="Synopsis"><H3>Synopsis</H3></A>
<PRE>
<PRE>#include &lt;locale&gt;
template &lt;class charT&gt; class ctype_byname;
template &lt;&gt; class ctype_byname&lt;char&gt;;</PRE>

</PRE>

<A NAME="Description"><H3>Description</H3></A>
<P><B><I>ctype_byname&lt;charT&gt;</I></B> template and <B><I>ctype_byname&lt;char&gt;</I></B> specialization include the same functions as the <B><I><A HREF="cty_0953.htm">ctype&lt;charT&gt;</A></I></B> template, but specific to a particular named locale. For a description of the member functions of <B><I>ctype_byname</I></B>, see the reference for <B><I>ctype&lt;charT&gt;</I></B>. Only the constructor is described here.</P>

<A NAME="Interface"><H3>Interface</H3></A>
<UL>
<PRE>template &lt;class charT&gt;
class ctype_byname : public ctype&lt;charT&gt; {
public:
  explicit ctype_byname(const char*, size_t = 0);
protected:
  ~ctype_byname();  // virtual
  virtual bool         do_is(mask, charT) const;
  virtual const charT* do_is(const charT*, const charT*, 
                             mask*) const;
  virtual const char*  do_scan_is(mask,
                                  const charT*, 
                                  const charT*) const;
  virtual const char*  do_scan_not(mask,
                                   const charT*, 
                                   const charT*) const;
  virtual charT        do_toupper(charT) const;
  virtual const charT* do_toupper(charT*, 
                                  const charT*) const;
  virtual charT        do_tolower(charT) const;
  virtual const charT* do_tolower(charT*, 
                                  const charT*) const;
  virtual charT        do_widen(char) const;
  virtual const char*  do_widen(const char*, const char*,
                                charT*) const;
  virtual char         do_narrow(charT, char) const;

  virtual const charT* do_narrow(const charT*, const charT*,
                                 char, char*) const;
};

class ctype_byname&lt;char&gt; : public ctype&lt;char&gt; {
public:
  explicit ctype_byname(const char*, size_t = 0);
protected:
  ~ctype_byname();  // virtual
  virtual char        do_toupper(char) const;
  virtual const char* do_toupper(char*, const char*) const;
  virtual char        do_tolower(char) const;
  virtual const char* do_tolower(char*, const char*) const;
};</PRE>

</UL>

<A NAME="Constructors"><H3>Constructors</H3></A>


<PRE>explicit <B>ctype_byname</B>(const char* name, size_t refs = 0); </PRE>

<UL>
<P>Constructs a <B><I>ctype_byname</I></B> facet. The facet classifies characters relative to the named locale specified by the <SAMP>name</SAMP> argument. If the <SAMP>refs</SAMP> argument is <SAMP>0</SAMP>, then destruction of the object is delegated to the locale, or locales, containing it. This allows the user to ignore lifetime management issues. On the other hand, if <SAMP>refs</SAMP> is <SAMP>1</SAMP>, then the object must be explicitly deleted; the locale does not do so.</P>
</UL>


<A NAME="See Also"><H3>See Also</H3></A>
<P><B><I><A HREF="loc_6943.htm">locale</A></I></B>, <B><I><A HREF="fac_8558.htm">facets</A></I></B>, <B><I><A HREF="col_9822.htm">collate</A></I></B>, <B><I><A HREF="cty_0953.htm">ctype&lt;char&gt;</A></I></B></P>


<BR>
<HR>
<A HREF="cty_2787.htm"><IMG SRC="images/prev.gif" WIDTH=20 HEIGHT=21 ALT="Previous file" BORDER=0></A><A HREF="index.htm"><IMG SRC="images/top.gif" WIDTH=56 HEIGHT=21 ALT="Top of document" BORDER=0></A><A HREF="classref.htm"><IMG SRC="images/toc.gif" WIDTH=56 HEIGHT=21 ALT="Contents" BORDER=0></A><A HREF="tindex.htm"><IMG SRC="images/index.gif" WIDTH=56 HEIGHT=21 ALT="Index" BORDER=0></A><A HREF="deq_4164.htm"><IMG SRC="images/next.gif" WIDTH=19 HEIGHT=21 ALT="Next file" BORDER=0></A>
<BR>&copy;Copyright 1999, Rogue Wave Software, Inc.<BR>Send <A HREF="mailto:onlinedocs@roguewave.com">mail</A> to report errors or comment on the documentation.
<BR>
OEM Release</BODY></HTML>
